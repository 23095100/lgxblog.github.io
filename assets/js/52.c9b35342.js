(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{423:function(s,t,a){"use strict";a.r(t);var e=a(1),n=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"kubernetes控制器-service"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes控制器-service"}},[s._v("#")]),s._v(" kubernetes控制器-Service")]),s._v(" "),t("blockquote",[t("p",[s._v("Service 是 将运行在一个或一组 "),t("a",{attrs:{href:"https://kubernetes.io/zh-cn/docs/concepts/workloads/pods/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Pod"),t("OutboundLink")],1),s._v(" 上的网络应用程序公开为网络服务的方法。")])]),s._v(" "),t("p",[s._v("使用Deployment部署Pod时，Pod大部分都是随机地部署到节点上，并且经常被删除重建，这就导致了容器间访问需要一种固定不变的资源类型来访问。")]),s._v(" "),t("p",[s._v("而kubernetes定义了一种对象类型，通过Service来访问Pod，而Service充当负载均衡器来把连接转发到其中任意一个Pod当中。")]),s._v(" "),t("div",{staticClass:"center-container"},[t("img",{staticStyle:{zoom:"33%"},attrs:{src:"https://static.xiaoliutalk.cn/img/202309061418518.png"}})]),t("h2",{attrs:{id:"_1-创建service"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-创建service"}},[s._v("#")]),s._v(" 1. 创建Service")]),s._v(" "),t("h3",{attrs:{id:"_1-1-带有标签选择器的service"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-带有标签选择器的service"}},[s._v("#")]),s._v(" 1.1. 带有标签选择器的Service")]),s._v(" "),t("p",[s._v("与Deployment相同，"),t("strong",[s._v("Service也通过标签选择器进行匹配Pod")]),s._v("，新建 "),t("code",[s._v("Service.yml")]),s._v(" ：")]),s._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("apiVersion")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" v1\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kind")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Service\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" my"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("service\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spec")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("selector")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("app.kubernetes.io/name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" MyApp\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("protocol")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" TCP\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("port")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("targetPort")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9376")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("p",[s._v("这个yml文件创建了一个名称为 "),t("code",[s._v("my-service")]),s._v(" 的Service，并匹配所有标签为 "),t("code",[s._v("app.kubernetes.io/name: MyApp")]),s._v(" 的Pod，并把Pod的9376端口（协议类型为TCP）反向代理到80端口。")]),s._v(" "),t("p",[s._v("创建这个Service，并查看Service的状态：")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("kubectl apply "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f")]),s._v(" Service.yml\nkubectl get services\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("div",{staticClass:"center-container"},[t("p",[t("img",{attrs:{src:"https://static.xiaoliutalk.cn/img/202309061443455.png",alt:""}})])]),t("ul",[t("li",[t("strong",[s._v("TYPE")]),s._v("：Service 类型，默认为"),t("strong",[s._v("ClusterIP")]),s._v("，即"),t("strong",[s._v("只能在集群内部进行访问")]),s._v("，通过 "),t("code",[s._v("CLUSTER-IP:PORT")]),s._v(" 进行访问，或者通过 "),t("code",[s._v("NAME:PORT")]),s._v(" 进行访问。")])]),s._v(" "),t("p",[s._v("也可以在Pod中 "),t("code",[s._v(".spec.containers[].ports[].name")]),s._v(" 自定义端口的名称，之后在Service中根据名称进行调用，通过自定义端口的名称可以极大提高Service配置的灵活性，例如我更新了Pod的端口，就不再需要再次更新Service的targetPort，减少了配置的工作量：")]),s._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("apiVersion")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" v1\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kind")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Pod\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("labels")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("app.kubernetes.io/name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" proxy\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spec")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("containers")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("stable\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("containerPort")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" http"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("web"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("svc\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("---")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("apiVersion")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" v1\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kind")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Service\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("service\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spec")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("selector")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("app.kubernetes.io/name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" proxy\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("of"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("service"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("port\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("protocol")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" TCP\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("port")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("targetPort")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" http"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("web"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("svc\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br")])]),t("h3",{attrs:{id:"_1-2-不带标签选择器的service"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-不带标签选择器的service"}},[s._v("#")]),s._v(" 1.2. 不带标签选择器的Service")]),s._v(" "),t("p",[s._v("通过不设置标签选择器可以自定义匹配Service的后端服务，相当于自定义了一个负载均衡器。")]),s._v(" "),t("p",[s._v("而这个负载均衡器又通过定义 "),t("code",[s._v("EndpointSlice")]),s._v(" 对象和 "),t("code",[s._v("Endpoints")]),s._v(" 对象来把连接转发到其中任意一个IP地址当中。")]),s._v(" "),t("p",[s._v("可以应用在以下场景：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("希望在生产环境中使用某个固定的名称而非IP地址访问外部的中间件服务；")])]),s._v(" "),t("li",[t("p",[s._v("使用其他命名空间或者其他集群的服务；")])]),s._v(" "),t("li",[t("p",[s._v("从基础环境迁移到kubernetes时，需要将一部分流量转发到外部服务当中；")])])]),s._v(" "),t("h4",{attrs:{id:"_1-2-1-endpoints"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-1-endpoints"}},[s._v("#")]),s._v(" 1.2.1. Endpoints")]),s._v(" "),t("blockquote",[t("p",[t("a",{attrs:{href:"https://kubernetes.io/zh-cn/docs/reference/kubernetes-api/service-resources/endpoints-v1/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Endpoints"),t("OutboundLink")],1),s._v(" （该资源类别为复数）定义了网络端点的列表，通常由 Service 引用，以定义可以将流量发送到哪些 Pod。")])]),s._v(" "),t("p",[s._v("简单来说，Endpoints对象包含了需要进行反向代理的IP和端口。而针对Endpoints对象，又根据Service的情况分为两种Endpoints：")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("Service带有标签选择器")]),s._v("：由kubernetes管理，有与Service匹配的Pod新建或者删除时，kubernetes都会自行更新Endpoints对象中的信息，来做到动态的负载均衡。")]),s._v(" "),t("li",[t("strong",[s._v("Service不带标签选择器")]),s._v("：如果创建了不包含标签选择器的Service，kubernetes将不会自动创建Endpoints对象，而这种方式可以通过手动创建Endpoints对象来实现Service与Endpoints的对象相匹配。")])]),s._v(" "),t("p",[s._v("下面我们主要看一下不带标签选择器的Service是如何与Endpoints建立连接的，新建 "),t("code",[s._v("ServiceWithoutSelector_Endpoints.yml")]),s._v("：")]),s._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("apiVersion")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" v1\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kind")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Service\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" my"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("service        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Service的名称必须与Endpoints的名称相匹配")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spec")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("protocol")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" TCP\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("port")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Service对外暴露的端口")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("---")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("apiVersion")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" v1\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kind")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Endpoints\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" my"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("service        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Endpoints的名称必须与Service的名称相匹配")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("subsets")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("addresses")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ip")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 10.1.1.1        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 被反向代理的ip地址")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ip")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 10.1.1.2        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 被反向代理的ip地址")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("port")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 被反向代理的端口")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br")])]),t("p",[s._v("创建这个Service，并查看Service和Endpoints的状态：")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("kubectl apply "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[s._v("-f")]),s._v(" ServiceWithoutSelector_Endpoints.yml\nkubectl get services\nkubectl get endpoints\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("div",{staticClass:"center-container"},[t("p",[t("img",{attrs:{src:"https://static.xiaoliutalk.cn/img/202309061839821.png",alt:""}})])]),t("p",[s._v("通过访问 "),t("code",[s._v("CLUSTER-IP:PORT")]),s._v(" 即可正常访问对应的Service。")]),s._v(" "),t("h4",{attrs:{id:"_1-2-2-endpointslice"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-2-endpointslice"}},[s._v("#")]),s._v(" 1.2.2. EndpointSlice")]),s._v(" "),t("blockquote",[t("p",[t("a",{attrs:{href:"https://kubernetes.io/zh-cn/docs/concepts/services-networking/endpoint-slices/",target:"_blank",rel:"noopener noreferrer"}},[s._v("EndpointSlice"),t("OutboundLink")],1),s._v(" 对象表示某个服务的后端网络端点的子集（"),t("strong",[s._v("切片")]),s._v("）。")])]),s._v(" "),t("p",[s._v("例如电商行业在进行促销活动或秒杀抢购活动时，业务流量相对较大。为了应对这种场景，通常会设置弹性扩容。在活动进行时，服务会进行弹性伸缩直到能够承载流量，这时会基于弹性扩容的策略，为业务增加副本数，也就是 Pod 会变多。")]),s._v(" "),t("p",[s._v("每个 Pod 都有各自唯一的 IP ，但同时 Pod 的 IP 也不是固定的。为了及时追踪 Pod IP 的变化，从而进行负载均衡，Endpoints API 提供了在 Kubernetes 中跟踪网络端点的一种简单而直接的方法。")]),s._v(" "),t("p",[s._v("但随着 Kubernetes 集群和服务逐渐开始为更多的后端 Pod 进行处理和发送请求，比如上文提到大流量场景下，Pod 数量会被不断扩容，Endpoints API 也将变得越大。这种情况下，Endpoints API 局限性变得越来越明显，甚至成为性能瓶颈。")]),s._v(" "),t("p",[s._v("为了解决这个局限性问题，在 Kubernetes v1.21 的版本中引入了对 Endpointslice API 的支持，解决了 Endpoints API 处理大量网络端点带来的性能问题，同时提供了可扩展和可伸缩的能力。")]),s._v(" "),t("p",[t("strong",[s._v("Endpoints 在流量高峰时的变化：")])]),s._v(" "),t("div",{staticClass:"center-container"},[t("p",[t("img",{attrs:{src:"https://static.xiaoliutalk.cn/img/202309071002398.png",alt:""}})])]),t("p",[t("strong",[s._v("Endpointslices 在流量高峰时的变化：")])]),s._v(" "),t("div",{staticClass:"center-container"},[t("p",[t("img",{attrs:{src:"https://static.xiaoliutalk.cn/img/202309071002659.png",alt:""}})])]),t("p",[s._v("下面我们主要看一下不带标签选择器的Service是如何与EndpointSlice建立连接的，新建 "),t("code",[s._v("ServiceWithoutSelector_EndpointSlice.yml")]),s._v("：")]),s._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("apiVersion")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" v1\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kind")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Service\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" my"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("service                    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Service的名称必须与Endpoints的标签kubernetes.io/service-name相匹配")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spec")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("protocol")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" TCP\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("port")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("targetPort")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8443")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("---")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("apiVersion")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" discovery.k8s.io/v1\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kind")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" EndpointSlice\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" my"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("service"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("                  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 按惯例将Service的名称用作EndpointSlice名称的前缀")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("labels")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Endpoints的标签kubernetes.io/service-name必须与Service的名称相匹配")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kubernetes.io/service-name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" my"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("service\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("addressType")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" IPv4                     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 地址类型，可以配置IPv4，IPv6，FQDN三种参数")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("appProtocol")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" http                 "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 关联的服务的协议")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("protocol")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" TCP                     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 协议类型")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("port")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8443")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("endpoints")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("addresses")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"10.1.1.1"')]),s._v("                    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 被反向代理的ip地址")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"10.1.1.2"')]),s._v("                    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 被反向代理的ip地址")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br")])]),t("p",[s._v("需要注意的是，Service的名称与Endpoints的标签 "),t("code",[s._v("kubernetes.io/service-name")]),s._v(" 相匹配，与Endpoints匹配方式略有不同。")]),s._v(" "),t("p",[s._v("同样创建这个Service，并查看Service和EndpointSlice的状态：")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("kubectl get services\nkubectl get endpointslices\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("div",{staticClass:"center-container"},[t("p",[t("img",{attrs:{src:"https://static.xiaoliutalk.cn/img/202309071555143.png",alt:""}})])]),t("p",[s._v("Service与EndpointSlice都成功被创建并且可以正常访问。")]),s._v(" "),t("h2",{attrs:{id:"_2-service的类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-service的类型"}},[s._v("#")]),s._v(" 2. Service的类型")]),s._v(" "),t("p",[s._v("Service Type（服务类型）主要包括以下几种：")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("ClusterIP")]),s._v("：默认值，"),t("strong",[s._v("只能在集群内部进行访问")]),s._v("。通过 "),t("code",[s._v("CLUSTER-IP:PORT")]),s._v(" 进行访问，或者通过 "),t("code",[s._v("NAME:PORT")]),s._v(" 进行访问。")]),s._v(" "),t("li",[t("strong",[s._v("NodePort")]),s._v("：在所有安装了 kube-proxy 的节点上打开一个端口，此端口可以代理至后端Pod，可以通过NodePort从集群外部访问集群内的服务，格式为 "),t("code",[s._v("NodeIP:NodePort")]),s._v(" 。")]),s._v(" "),t("li",[t("strong",[s._v("LoadBalancer")]),s._v("：使用云提供商的负载均衡器公开Service。")]),s._v(" "),t("li",[t("strong",[s._v("ExternalName")]),s._v("：通过返回定义的CNAME别名，将Service映射到可被DNS解析的其他域名。")])]),s._v(" "),t("p",[s._v("ClusterIP这里省略，直接分析下Service对外暴露的三种类型，"),t("strong",[s._v("NodePort")]),s._v("，"),t("strong",[s._v("LoadBalancer")]),s._v("和"),t("strong",[s._v("ExternalName")]),s._v("。")]),s._v(" "),t("h3",{attrs:{id:"_2-1-nodeport"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-nodeport"}},[s._v("#")]),s._v(" 2.1. NodePort")]),s._v(" "),t("p",[s._v("通过创建Service，并将Type设置为NodePort来实现通过NodePort从集群外部访问集群内的服务。")]),s._v(" "),t("div",{staticClass:"center-container"},[t("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://static.xiaoliutalk.cn/img/202309071828671.png"}})]),t("p",[s._v("通过图片我们可以看出来，将Type设置为NodePort可以实现在每一个集群节点上都会打开一个NodePort，而通过访问任意一个集群节点的IP+NodePort就可以从外部访问到后端的Pod。")]),s._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("apiVersion")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" v1\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kind")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Service\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" my"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("service\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spec")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("type")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" NodePort\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("selector")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("app.kubernetes.io/name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" MyApp\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 为了方便起见，targetPort被设置为与port字段相同的值")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("port")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("targetPort")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可选字段，不指定此字段的情况下，kubernetes会从某个范围内分配一个端口号（默认：30000-32767）")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("nodePort")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("30007")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("p",[s._v("可以通过如下方式访问此Sercice：")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("集群内部")]),s._v("：通过 "),t("code",[s._v("CLUSTER-IP:PORT")]),s._v(" 进行访问，或者通过 "),t("code",[s._v("NAME:PORT")]),s._v(" 进行访问。")]),s._v(" "),t("li",[t("strong",[s._v("集群外部")]),s._v("：任意一个集群节点的宿主机IP+NodePort进行访问。")])]),s._v(" "),t("h3",{attrs:{id:"_2-2-loadbalancer"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-loadbalancer"}},[s._v("#")]),s._v(" 2.2. LoadBalancer")]),s._v(" "),t("blockquote",[t("p",[t("strong",[s._v("LoadBalancer底层依赖于NodePort。")])])]),s._v(" "),t("p",[s._v("使用NodePort就又涉及到负载均衡的问题，而LoadBalancer就是为了解决K8s将内部服务对外暴露时如何进行负载均衡的问题而出现的。")]),s._v(" "),t("div",{staticClass:"center-container"},[t("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://static.xiaoliutalk.cn/img/202309081812542.png"}})]),t("p",[s._v("假设我们有一套阿里云K8s环境，要将K8s内部的一个服务通过LoadBalancer方式暴露出去，可以将Service type设定为LoadBalancer。服务发布后，阿里云K8s不仅会自动创建服务的NodePort端口转发，同时会自动帮我们申请一个SLB，有独立公网IP，并且阿里云K8s会帮我们自动把SLB映射到后台K8s集群的对应NodePort上。这样，通过SLB的公网IP，我们就可以访问到K8s内部服务，阿里云SLB负载均衡器会在背后做负载均衡。")]),s._v(" "),t("p",[s._v("值得一提的是，如果是在本地开发测试环境里头搭建的K8s，一般不支持LoadBalancer，因为通过NodePort做测试访问就够了。但是在生产环境或者公有云上的K8s，例如GCP或者阿里云K8s，基本都支持自动创建LoadBalancer。")]),s._v(" "),t("p",[s._v("如果是自建集群，可以通过安装 "),t("a",{attrs:{href:"https://metallb.universe.tf/",target:"_blank",rel:"noopener noreferrer"}},[s._v("MetalLB"),t("OutboundLink")],1),s._v(" 来使用 LoadBalancer。这里暂时不跟进讲解自建集群的LoadBalancer相关配置。")]),s._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("apiVersion")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" v1\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kind")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Service\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("labels")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("app")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" my"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("nginx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("svc\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("namespace")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" default\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spec")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("port")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("protocol")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" TCP\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("targetPort")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("selector")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("app")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("type")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" LoadBalancer\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("p",[s._v("公有云具体配置可以参考阿里云官方提供的 "),t("a",{attrs:{href:"https://help.aliyun.com/zh/ack/ack-managed-and-ack-dedicated/user-guide/use-an-automatically-created-slb-instance-to-expose-an-application?spm=a2c4g.11186623.0.0.13ee8d540KmX6w",target:"_blank",rel:"noopener noreferrer"}},[s._v("通过使用自动创建SLB的服务公开应用"),t("OutboundLink")],1),s._v(" 这篇文章进行配置。")]),s._v(" "),t("h3",{attrs:{id:"_2-3-externalname"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-externalname"}},[s._v("#")]),s._v(" 2.3. ExternalName")]),s._v(" "),t("p",[s._v("通过返回定义的CNAME别名，将Service映射到可被DNS解析的其他域名。")]),s._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("apiVersion")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" v1\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kind")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Service\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" my"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("service\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spec")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("type")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ExternalName\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("externalName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" my.database.example.com\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("这个yml把名称为my-service的Service映射到了my.database.example.com这个域名。")]),s._v(" "),t("h3",{attrs:{id:"_2-4-externalips"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-externalips"}},[s._v("#")]),s._v(" 2.4. externalIPs")]),s._v(" "),t("blockquote",[t("p",[s._v("定义 Service 时，你可以为任何"),t("a",{attrs:{href:"https://kubernetes.io/zh-cn/docs/concepts/services-networking/service/#publishing-services-service-types",target:"_blank",rel:"noopener noreferrer"}},[s._v("服务类型"),t("OutboundLink")],1),s._v("指定 externalIPs。")])]),s._v(" "),t("p",[s._v("externalIPs可以说是Service类型的扩充。")]),s._v(" "),t("p",[s._v("如果有外部可达的 IP（如网络通过BGP，OSPF等路由协议进行宣告路由可达集群节点） ，即"),t("strong",[s._v("集群外能通过这个IP访问到集群内的Node（至少其中一台节点）")]),s._v("，那我们就可以通过这些Node将流量转发到Service，并提供负载均衡。")]),s._v(" "),t("div",{staticClass:"center-container"},[t("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://static.xiaoliutalk.cn/img/202309281443742.png"}})]),t("blockquote",[t("p",[s._v("🔔  "),t("code",[s._v("external IP")]),s._v(" 一般由数据中心或者网络管理员管理，独立于kubernetes之外。")])]),s._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("apiVersion")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" v1\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kind")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Service\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" my"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("service\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spec")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("selector")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("app.kubernetes.io/name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("protocol")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" TCP\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("port")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("targetPort")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("externalIPs")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" 192.168.7.30\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("p",[s._v("这个叫 "),t("code",[s._v("my-service")]),s._v(" 的服务可以在 "),t("code",[s._v("192.168.7.30:80")]),s._v(" 上被正常访问。")]),s._v(" "),t("h2",{attrs:{id:"_3-服务发现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-服务发现"}},[s._v("#")]),s._v(" 3. 服务发现")]),s._v(" "),t("p",[s._v("kubernetes支持两种类型的服务发现：环境变量和DNS。")]),s._v(" "),t("h3",{attrs:{id:"_3-1-环境变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-环境变量"}},[s._v("#")]),s._v(" 3.1. 环境变量")]),s._v(" "),t("p",[s._v("当Pod部署到一个Node节点后，kubelet会在其中为每个活跃的Service添加一组环境变量，并以 "),t("code",[s._v("{SERVICE_NAME}_SERVICE_HOST")]),s._v(" 和 "),t("code",[s._v("{SERVICE_NAME}_SERVICE_PORT")]),s._v(" 格式命名的变量，其中服务名都转换为大写字母，"),t("code",[s._v(".")]),s._v(" 和 "),t("code",[s._v("-")]),s._v(" 转换为 "),t("code",[s._v("_")]),s._v(" 。")]),s._v(" "),t("div",{staticClass:"language-yaml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code")]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"})]),t("h3",{attrs:{id:"_3-2-dns"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-dns"}},[s._v("#")]),s._v(" 3.2. DNS")]),s._v(" "),t("p",[s._v("参考文章及书籍：")]),s._v(" "),t("ul",[t("li",[t("p",[t("a",{attrs:{href:"https://kubernetes.io/docs/concepts/services-networking/service/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Service"),t("OutboundLink")],1)])]),s._v(" "),t("li",[t("p",[t("a",{attrs:{href:"http://product.dangdang.com/26439199.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("Kubernetes in Action"),t("OutboundLink")],1)])]),s._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://www.manning.com/books/kubernetes-in-action-second-edition",target:"_blank",rel:"noopener noreferrer"}},[s._v("Kubernetes in Action, Second Edition"),t("OutboundLink")],1)])]),s._v(" "),t("li",[t("p",[t("a",{attrs:{href:"http://product.dangdang.com/29222386.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("深入剖析Kubernetes"),t("OutboundLink")],1)])]),s._v(" "),t("li",[t("p",[t("a",{attrs:{href:"http://product.dangdang.com/29404674.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("云原生Kubernetes全栈架构师实战"),t("OutboundLink")],1)])]),s._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://it.sohu.com/a/611171687_827544",target:"_blank",rel:"noopener noreferrer"}},[s._v("Kubernetes上千规模Pod最佳实践 "),t("OutboundLink")],1)])]),s._v(" "),t("li",[t("p",[t("a",{attrs:{href:"https://blog.csdn.net/yang75108/article/details/101268208",target:"_blank",rel:"noopener noreferrer"}},[s._v("Kubernetes网络三部曲之三 ~ NodePort vs LoadBalancer vs Ingress"),t("OutboundLink")],1)])]),s._v(" "),t("li",[t("p",[t("a",{attrs:{href:"http://arthurchiao.art/blog/cilium-k8s-service-lb-zh/",target:"_blank",rel:"noopener noreferrer"}},[s._v("[译] 基于 BPF/XDP 实现 K8s Service 负载均衡 (LPC, 2020)"),t("OutboundLink")],1)])])])])}),[],!1,null,null,null);t.default=n.exports}}]);