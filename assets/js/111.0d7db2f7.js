(window.webpackJsonp=window.webpackJsonp||[]).push([[111],{483:function(_,v,s){"use strict";s.r(v);var t=s(1),a=Object(t.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h1",{attrs:{id:"b-树索引"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#b-树索引"}},[_._v("#")]),_._v(" B+树索引")]),_._v(" "),v("p",[_._v("数据页可以组成一个"),v("strong",[_._v("双向链表")]),_._v("，而每个数据页中的"),v("strong",[_._v("记录会按照主键值从小到大的顺序")]),_._v("组成一个"),v("strong",[_._v("单向链表")]),_._v("，每个数据页都会为存储在它里边儿的记录生成一个"),v("strong",[_._v("页目录")]),_._v("，在通过"),v("strong",[_._v("主键查找")]),_._v("某条记录的时候可以在页目录中使用"),v("strong",[_._v("二分法")]),_._v("快速定位到对应的槽，然后再遍历该槽对应分组中的记录即可快速找到指定的记录。页和记录的关系示意图如下：")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://static.xiaoliutalk.cn/img/202301031612681.jpg",alt:""}})]),_._v(" "),v("p",[_._v("其中页a、页b、页c ... 页n 这些页可以不在物理结构上相连，只通过双向链表相关联。")]),_._v(" "),v("p",[_._v("为了故事的顺利发展，我们先建一个表：")]),_._v(" "),v("div",{staticClass:"language-sql line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-sql"}},[v("code",[v("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("CREATE")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("TABLE")]),_._v(" index_demo"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("(")]),_._v("\n    c1 "),v("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("INT")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(",")]),_._v("\n    c2 "),v("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("INT")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(",")]),_._v("\n    c3 "),v("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("CHAR")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("(")]),v("span",{pre:!0,attrs:{class:"token number"}},[_._v("1")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(",")]),_._v("\n    "),v("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("PRIMARY")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("KEY")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("(")]),_._v("c1"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(")")]),_._v("\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(")")]),_._v(" ROW_FORMAT "),v("span",{pre:!0,attrs:{class:"token operator"}},[_._v("=")]),_._v(" Compact"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),_._v("\n")])]),_._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[_._v("1")]),v("br"),v("span",{staticClass:"line-number"},[_._v("2")]),v("br"),v("span",{staticClass:"line-number"},[_._v("3")]),v("br"),v("span",{staticClass:"line-number"},[_._v("4")]),v("br"),v("span",{staticClass:"line-number"},[_._v("5")]),v("br"),v("span",{staticClass:"line-number"},[_._v("6")]),v("br")])]),v("h2",{attrs:{id:"_1-innodb中的索引方案"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-innodb中的索引方案"}},[_._v("#")]),_._v(" 1. InnoDB中的索引方案")]),_._v(" "),v("p",[_._v("MySQL复用了之前存储用户记录的数据页来存储"),v("strong",[_._v("目录项")]),_._v("。")]),_._v(" "),v("p",[_._v("为了和用户记录做一下区分，我们把这些用来表示目录项的记录称为"),v("strong",[_._v("目录项记录")]),_._v("。"),v("code",[_._v("InnoDB")]),_._v("通过记录头信息里的"),v("code",[_._v("record_type")]),_._v("属性来区分一条记录是"),v("strong",[_._v("普通的用户记录")]),_._v("还是"),v("strong",[_._v("目录项记录")]),_._v("：")]),_._v(" "),v("ul",[v("li",[v("code",[_._v("0")]),_._v("：普通的用户记录")]),_._v(" "),v("li",[v("code",[_._v("1")]),_._v("：目录项记录")]),_._v(" "),v("li",[v("code",[_._v("2")]),_._v("：最小记录")]),_._v(" "),v("li",[v("code",[_._v("3")]),_._v("：最大记录")])]),_._v(" "),v("p",[_._v("把目录项放到数据页中的样子就是这样：")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://static.xiaoliutalk.cn/img/202301031629635.jpg",alt:""}})]),_._v(" "),v("p",[_._v("从图中可以看出来，我们新分配了一个编号为"),v("code",[_._v("30")]),_._v("的页来专门存储"),v("code",[_._v("目录项记录")]),_._v("。这里强调一遍"),v("code",[_._v("目录项记录")]),_._v("的特点：")]),_._v(" "),v("ul",[v("li",[v("p",[v("strong",[_._v("目录项记录")]),_._v("的"),v("code",[_._v("record_type")]),_._v("值是1。")])]),_._v(" "),v("li",[v("p",[v("strong",[_._v("目录项记录")]),_._v("只有"),v("strong",[_._v("主键值")]),_._v("和"),v("strong",[_._v("页的编号")]),_._v("两个列。")])]),_._v(" "),v("li",[v("p",[_._v("只有在存储"),v("strong",[_._v("目录项记录的页")]),_._v("中的"),v("strong",[_._v("主键值最小")]),_._v("的目录项记录的"),v("code",[_._v("min_rec_mask")]),_._v("值为"),v("code",[_._v("1")]),_._v("，其他别的记录的"),v("code",[_._v("min_rec_mask")]),_._v("值都是"),v("code",[_._v("0")]),_._v("。")])])]),_._v(" "),v("p",[_._v("如果以查找主键为"),v("code",[_._v("20")]),_._v("的记录为例，根据某个主键值去查找记录的步骤就可以大致拆分成下边两步：")]),_._v(" "),v("ol",[v("li",[v("p",[_._v("先到存储"),v("strong",[_._v("目录项记录")]),_._v("的页，也就是页"),v("code",[_._v("30")]),_._v("中通过"),v("strong",[_._v("二分法")]),_._v("快速定位到对应目录项，因为"),v("code",[_._v("12 < 20 < 209")]),_._v("，所以定位到对应的记录所在的页就是"),v("code",[_._v("页9")]),_._v("。")])]),_._v(" "),v("li",[v("p",[_._v("再到存储用户记录的"),v("code",[_._v("页9")]),_._v("中根据二分法快速定位到主键值为"),v("code",[_._v("20")]),_._v("的用户记录。")])])]),_._v(" "),v("p",[_._v("但是一个页只有"),v("code",[_._v("16KB")]),_._v("大小，以至于一个数据页不足以存放所有的"),v("code",[_._v("目录项记录")]),_._v("的话，MySQL会新增一个存储"),v("code",[_._v("目录项记录")]),_._v("的页。")]),_._v(" "),v("p",[_._v("我们"),v("strong",[_._v("假设")]),_._v("一个存储"),v("code",[_._v("目录项记录")]),_._v("的页最多只能存放4条"),v("code",[_._v("目录项记录")]),_._v("，所以如果此时我们再向上图中插入一条主键值为"),v("code",[_._v("320")]),_._v("的用户记录的话，那就需要分配一个新的存储"),v("code",[_._v("目录项记录")]),_._v("的页：")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://static.xiaoliutalk.cn/img/202301031708999.jpg",alt:""}})]),_._v(" "),v("p",[_._v("从图中可以看出，我们插入了一条主键值为"),v("code",[_._v("320")]),_._v("的用户记录之后需要两个新的数据页：")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("为存储该用户记录而新生成了"),v("strong",[_._v("页31")]),_._v("。")])]),_._v(" "),v("li",[v("p",[_._v("假设原先存储"),v("code",[_._v("目录项记录")]),_._v("的"),v("code",[_._v("页30")]),_._v("的容量已满，所以不得不需要一个新的"),v("code",[_._v("页32")]),_._v("来存放"),v("code",[_._v("页31")]),_._v("对应的"),v("strong",[_._v("目录项")]),_._v("。")])])]),_._v(" "),v("p",[_._v("如果我们想"),v("strong",[_._v("根据主键值查找")]),_._v("一条用户记录大致需要3个步骤，以查找主键值为"),v("code",[_._v("20")]),_._v("的记录为例：")]),_._v(" "),v("ol",[v("li",[v("p",[_._v("确定"),v("strong",[_._v("目录项记录页")]),_._v("。")])]),_._v(" "),v("li",[v("p",[_._v("通过"),v("strong",[_._v("目录项记录页")]),_._v("确定用户记录真实所在的页。")])]),_._v(" "),v("li",[v("p",[_._v("在真实存储用户记录的页中定位到具体的记录。")])])]),_._v(" "),v("p",[_._v("为了定位存储"),v("code",[_._v("目录项记录")]),_._v("的页，我们为这些存储"),v("code",[_._v("目录项记录")]),_._v("的页再生成一个更高级的目录，就像是一个多级目录一样，大目录里嵌套小目录，小目录里才是实际的数据，所以现在各个页的示意图就是这样子：")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://static.xiaoliutalk.cn/img/202301031659661.jpg",alt:""}})]),_._v(" "),v("p",[_._v("随着表中记录的增加，这个目录的层级会继续增加，如果简化一下，那么我们可以用下边这个图来描述它：")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://static.xiaoliutalk.cn/img/202301031723964.jpg",alt:""}})]),_._v(" "),v("p",[_._v("这玩意儿像不像一个倒过来的"),v("code",[_._v("树")]),_._v("呀，上头是树根，下头是树叶！其实这是一种组织数据的形式，或者说是一种数据结构，它的名称是"),v("code",[_._v("B+")]),_._v("树。")]),_._v(" "),v("p",[_._v("B+树的最底层的节点称为"),v("strong",[_._v("叶子节点")]),_._v("或"),v("strong",[_._v("叶节点")]),_._v("，其余用来存放"),v("strong",[_._v("目录项")]),_._v("的节点称为"),v("strong",[_._v("非叶子节点")]),_._v("或者"),v("strong",[_._v("内节点")]),_._v("，其中"),v("strong",[_._v("B+"),v("strong",[_._v("树最上边的那个节点也称为")]),_._v("根节点")]),_._v("。")]),_._v(" "),v("p",[_._v("MySQL规定最下边的那层，也就是存放我们用户记录的那层为第"),v("code",[_._v("0")]),_._v("层，之后依次往上加。一般情况下，我们用到的"),v("code",[_._v("B+")]),_._v("树都不会超过4层，那我们通过主键值去查找某条记录最多只需要做4个页面内的查找（查找3个目录项页和一个用户记录页），又因为在每个页面内有所谓的"),v("code",[_._v("Page Directory")]),_._v("（页目录），所以在页面内也可以通过"),v("strong",[_._v("二分法")]),_._v("实现快速定位记录。")]),_._v(" "),v("h3",{attrs:{id:"_1-1-聚簇索引"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-聚簇索引"}},[_._v("#")]),_._v(" 1.1. 聚簇索引")]),_._v(" "),v("p",[_._v("聚簇索引：只能在"),v("strong",[_._v("搜索条件是主键")]),_._v("时生效。")]),_._v(" "),v("p",[_._v("我们上边介绍的"),v("code",[_._v("B+")]),_._v("树本身就是一个目录，或者说本身就是一个索引。它有两个特点：")]),_._v(" "),v("ol",[v("li",[v("p",[_._v("使用记录主键值的大小进行记录和页的排序，这包括三个方面的含义：")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("页内的"),v("strong",[_._v("记录是按照主键的大小顺序排成一个单向链表")]),_._v("。")])]),_._v(" "),v("li",[v("p",[_._v("各个"),v("strong",[_._v("存放用户记录的页")]),_._v("也是"),v("strong",[_._v("根据页中用户记录的主键大小")]),_._v("顺序排成一个"),v("strong",[_._v("双向链表")]),_._v("。")])]),_._v(" "),v("li",[v("p",[_._v("存放目录项记录的页分为不同的层次，在"),v("strong",[_._v("同一层次中的页")]),_._v("也是根据"),v("strong",[_._v("页中目录项记录的主键大小")]),_._v("顺序排成一个"),v("strong",[_._v("双向链表")]),_._v("。")])])])]),_._v(" "),v("li",[v("p",[v("code",[_._v("B+")]),_._v("树的"),v("strong",[_._v("叶子节点存储的是完整的用户记录")]),_._v("。")]),_._v(" "),v("ul",[v("li",[v("strong",[_._v("完整的用户记录")]),_._v("：就是指这个记录中存储了所有列的值（"),v("strong",[_._v("包括隐藏列")]),_._v("）。")])])])]),_._v(" "),v("p",[_._v("具有这两种特性的"),v("strong",[_._v("B+"),v("strong",[_._v("树称为")]),_._v("聚簇索引")]),_._v("，所有完整的用户记录都存放在这个"),v("strong",[_._v("聚簇索引")]),_._v("的"),v("strong",[_._v("叶子节点")]),_._v("处。这种"),v("strong",[_._v("聚簇索引")]),_._v("并不需要我们显式的使用"),v("code",[_._v("INDEX")]),_._v("语句去创建，"),v("code",[_._v("InnoDB")]),_._v("存储引擎会"),v("strong",[_._v("自动")]),_._v("的为我们"),v("strong",[_._v("创建聚簇索引")]),_._v("。在"),v("code",[_._v("InnoDB")]),_._v("存储引擎中，"),v("strong",[_._v("聚簇索引")]),_._v("就是数据的存储方式（所有的用户记录都存储在了"),v("strong",[_._v("叶子节点")]),_._v("），也就是所谓的索引即数据，数据即索引。")]),_._v(" "),v("h3",{attrs:{id:"_1-2-二级索引"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-二级索引"}},[_._v("#")]),_._v(" 1.2. 二级索引")]),_._v(" "),v("p",[_._v("对于其他的列作为搜索条件时，通过多建几棵"),v("code",[_._v("B+")]),_._v("树，不同的"),v("code",[_._v("B+")]),_._v("树中的数据采用不同的排序规则来进行索引查找。")]),_._v(" "),v("p",[_._v("假如说我们用"),v("code",[_._v("c2")]),_._v("列的大小作为数据页、页中记录的排序规则，再建一棵"),v("code",[_._v("B+")]),_._v("树，效果如下图所示：")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://static.xiaoliutalk.cn/img/202301031741276.jpg",alt:""}})]),_._v(" "),v("ul",[v("li",[v("p",[_._v("这个**B+**树与上边介绍的聚簇索引有几处不同：")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("使用记录c2列的大小进行记录和页的排序，这包括三个方面的含义：")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("页内的"),v("strong",[_._v("记录是按照c2列的大小顺序排成一个单向链表")]),_._v("。")])]),_._v(" "),v("li",[v("p",[_._v("各个"),v("strong",[_._v("存放用户记录的页")]),_._v("也是根据"),v("strong",[_._v("页中记录的c2列大小")]),_._v("顺序排成一个"),v("strong",[_._v("双向链表")]),_._v("。")])]),_._v(" "),v("li",[v("p",[_._v("存放目录项记录的页分为不同的层次，在"),v("strong",[_._v("同一层次中的页")]),_._v("也是根据"),v("strong",[_._v("页中目录项记录的c2列大小")]),_._v("顺序排成一个"),v("strong",[_._v("双向链表")]),_._v("。")])])])]),_._v(" "),v("li",[v("p",[v("strong",[_._v("B+"),v("strong",[_._v("树的叶子节点存储的并不是完整的用户记录，而只是")]),_._v("c2列+主键")]),_._v("这两个列的值。")])]),_._v(" "),v("li",[v("p",[_._v("目录项记录中不再是"),v("strong",[_._v("主键+页号")]),_._v("的搭配，而变成了"),v("strong",[_._v("c2列+页号")]),_._v("的搭配。")])])])])]),_._v(" "),v("p",[_._v("以查找"),v("code",[_._v("c2")]),_._v("列的值为"),v("code",[_._v("4")]),_._v("的记录为例，查找过程如下：")]),_._v(" "),v("ol",[v("li",[v("p",[_._v("确定"),v("strong",[_._v("目录项记录")]),_._v("页，根据"),v("code",[_._v("根页面")]),_._v("，也就是"),v("code",[_._v("页44")]),_._v("，可以快速定位到"),v("code",[_._v("目录项记录")]),_._v("所在的页为"),v("code",[_._v("页42")]),_._v("。")])]),_._v(" "),v("li",[v("p",[_._v("通过"),v("strong",[_._v("目录项记录")]),_._v("页确定用户记录真实所在的页。在"),v("code",[_._v("页42")]),_._v("中可以快速定位到实际存储用户记录的页，但是由于"),v("code",[_._v("c2")]),_._v("列并没有唯一性约束，所以"),v("code",[_._v("c2")]),_._v("列值为"),v("code",[_._v("4")]),_._v("的记录可能分布在多个数据页中，又因为"),v("code",[_._v("2 < 4 ≤ 4")]),_._v("，所以确定实际存储用户记录的页在"),v("code",[_._v("页34")]),_._v("和"),v("code",[_._v("页35")]),_._v("中。")])]),_._v(" "),v("li",[v("p",[_._v("在真实存储用户记录的页中定位到具体的记录。到"),v("code",[_._v("页34")]),_._v("和"),v("code",[_._v("页35")]),_._v("中定位到具体的记录。")])]),_._v(" "),v("li",[v("p",[_._v("但是这个"),v("code",[_._v("B+")]),_._v("树的叶子节点中的记录只存储了"),v("code",[_._v("c2")]),_._v("和"),v("code",[_._v("c1")]),_._v("（也就是"),v("code",[_._v("主键")]),_._v("）两个列，所以我们必须"),v("strong",[_._v("再根据主键值去聚簇索引中再查找一遍")]),_._v("完整的用户记录。")])])]),_._v(" "),v("p",[_._v("如果我们想根据"),v("code",[_._v("c2")]),_._v("列的值查找到完整的用户记录的话，仍然需要到"),v("code",[_._v("聚簇索引")]),_._v("中再查一遍，这个过程也被称为"),v("strong",[_._v("回表")]),_._v("。")]),_._v(" "),v("p",[_._v("为什么我们还需要一次"),v("code",[_._v("回表")]),_._v("操作呢？直接把完整的用户记录放到"),v("code",[_._v("叶子节点")]),_._v("不就好了么？你说的对，如果把完整的用户记录放到"),v("code",[_._v("叶子节点")]),_._v("是可以不用"),v("code",[_._v("回表")]),_._v("，但是太占地方了呀～相当于每建立一棵"),v("code",[_._v("B+")]),_._v("树都需要把所有的用户记录再都拷贝一遍，这就有点太浪费存储空间了。因为这种按照"),v("code",[_._v("非主键列")]),_._v("建立的"),v("code",[_._v("B+")]),_._v("树需要一次"),v("code",[_._v("回表")]),_._v("操作才可以定位到完整的用户记录，所以这种"),v("code",[_._v("B+")]),_._v("树也被称为"),v("code",[_._v("二级索引")]),_._v("（英文名"),v("code",[_._v("secondary index")]),_._v("），或者"),v("code",[_._v("辅助索引")]),_._v("。由于我们使用的是"),v("code",[_._v("c2")]),_._v("列的大小作为"),v("code",[_._v("B+")]),_._v("树的排序规则，所以我们也称这个"),v("code",[_._v("B+")]),_._v("树为为c2列建立的索引。")]),_._v(" "),v("h3",{attrs:{id:"_1-3-联合索引"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-联合索引"}},[_._v("#")]),_._v(" 1.3. 联合索引")]),_._v(" "),v("p",[_._v("我们也可以同时以多个列的大小作为排序规则，也就是同时为多个列建立索引，比方说我们想让"),v("code",[_._v("B+")]),_._v("树按照"),v("code",[_._v("c2")]),_._v("和"),v("code",[_._v("c3")]),_._v("列的大小进行排序，这个包含两层含义：")]),_._v(" "),v("ul",[v("li",[_._v("先把各个记录和页按照"),v("code",[_._v("c2")]),_._v("列进行排序。")]),_._v(" "),v("li",[_._v("在记录的"),v("code",[_._v("c2")]),_._v("列相同的情况下，采用"),v("code",[_._v("c3")]),_._v("列进行排序")])]),_._v(" "),v("p",[_._v("为"),v("code",[_._v("c2")]),_._v("和"),v("code",[_._v("c3")]),_._v("列建立的索引的示意图如下：")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://static.xiaoliutalk.cn/img/202301031815851.jpg",alt:""}})]),_._v(" "),v("p",[_._v("如图所示，我们需要注意一下几点：")]),_._v(" "),v("ul",[v("li",[_._v("每条"),v("strong",[_._v("目录项记录")]),_._v("都由"),v("strong",[_._v("c2")]),_._v("、"),v("strong",[_._v("c3")]),_._v("、"),v("strong",[_._v("页号")]),_._v("这三个部分组成，各条记录先按照"),v("strong",[_._v("c2")]),_._v("列的值进行排序，如果记录的"),v("strong",[_._v("c2")]),_._v("列相同，则按照"),v("strong",[_._v("c3")]),_._v("列的值进行排序。")]),_._v(" "),v("li",[v("strong",[_._v("B+"),v("strong",[_._v("树叶子节点处的用户记录由")]),_._v("c2")]),_._v("、"),v("strong",[_._v("c3")]),_._v("和主键"),v("strong",[_._v("c1")]),_._v("列组成。")])]),_._v(" "),v("p",[_._v("以c2和c3列的大小为排序规则建立的"),v("code",[_._v("B+")]),_._v("树称为"),v("code",[_._v("联合索引")]),_._v("。")]),_._v(" "),v("h2",{attrs:{id:"_2-innodb的b-树索引的注意事项"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-innodb的b-树索引的注意事项"}},[_._v("#")]),_._v(" 2. InnoDB的B+树索引的注意事项")]),_._v(" "),v("h3",{attrs:{id:"_2-1-根页面万年不动窝"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-根页面万年不动窝"}},[_._v("#")]),_._v(" 2.1. 根页面万年不动窝")]),_._v(" "),v("p",[_._v("我们前边介绍"),v("code",[_._v("B+")]),_._v("树索引的时候，为了大家理解上的方便，先把存储用户记录的叶子节点都画出来，然后接着画存储目录项记录的内节点，实际上"),v("code",[_._v("B+")]),_._v("树的形成过程是这样的：")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("每当为某个表创建一个"),v("code",[_._v("B+")]),_._v("树索引的时候，都会为这个索引创建一个"),v("strong",[_._v("根节点")]),_._v("页面。最开始表中没有数据的时候，每个"),v("code",[_._v("B+")]),_._v("树索引对应的"),v("code",[_._v("根节点")]),_._v("中既没有用户记录，也没有目录项目录。")])]),_._v(" "),v("li",[v("p",[_._v("随后向表中插入用户记录时，先把用户记录存储到这个"),v("strong",[_._v("根节点")]),_._v("中。")])]),_._v(" "),v("li",[v("p",[_._v("当"),v("code",[_._v("根节点")]),_._v("中的可用空间用完时继续插入记录，此时会将"),v("code",[_._v("根节点")]),_._v("中的所有记录复制到一个新分配的页，比如"),v("code",[_._v("页a")]),_._v("中，然后对这个新页进行"),v("code",[_._v("页分裂")]),_._v("的操作，得到另一个新页，比如"),v("code",[_._v("页b")]),_._v("。这时新插入的记录根据键值（也就是聚簇索引中的主键值，二级索引中对应的索引列的值）的大小就会被分配到"),v("code",[_._v("页a")]),_._v("或者"),v("code",[_._v("页b")]),_._v("中，而根节点便升级为存储目录项记录的页（"),v("strong",[_._v("由原先的存储用户记录的数据页转换为存储目录项记录的页")]),_._v("）。")])])]),_._v(" "),v("p",[_._v("这个过程需要大家特别注意的是：**一个B+树索引的根节点自诞生之日起，便不会再移动。**这样只要我们对某个表建立一个索引，那么它的"),v("code",[_._v("根节点")]),_._v("的页号便会被记录到某个地方，然后凡是"),v("code",[_._v("InnoDB")]),_._v("存储引擎需要用到这个索引的时候，都会从那个固定的地方取出"),v("code",[_._v("根节点")]),_._v("的页号，从而来访问这个索引。")]),_._v(" "),v("h3",{attrs:{id:"_2-2-内节点中目录项记录的唯一性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-内节点中目录项记录的唯一性"}},[_._v("#")]),_._v(" 2.2. 内节点中目录项记录的唯一性")]),_._v(" "),v("p",[_._v("我们知道"),v("code",[_._v("B+")]),_._v("树索引的内节点中目录项记录的内容是"),v("code",[_._v("索引列 + 页号")]),_._v("的搭配，但是这个搭配对于二级索引来说有点儿不严谨。还拿"),v("code",[_._v("index_demo")]),_._v("表为例，假设这个表中的数据是这样的：")]),_._v(" "),v("table",[v("thead",[v("tr",[v("th",[_._v("c1")]),_._v(" "),v("th",[_._v("c2")]),_._v(" "),v("th",[_._v("c3")])])]),_._v(" "),v("tbody",[v("tr",[v("td",[_._v("1")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("'u'")])]),_._v(" "),v("tr",[v("td",[_._v("3")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("'d'")])]),_._v(" "),v("tr",[v("td",[_._v("5")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("'y'")])]),_._v(" "),v("tr",[v("td",[_._v("7")]),_._v(" "),v("td",[_._v("1")]),_._v(" "),v("td",[_._v("'a'")])])])]),_._v(" "),v("p",[_._v("为了让新插入记录能找到自己在那个页里，我们需要保证在B+树的同一层内节点的目录项记录除"),v("code",[_._v("页号")]),_._v("这个字段以外是唯一的。所以对于二级索引的内节点的目录项记录的内容"),v("strong",[_._v("实际上是由三个部分")]),_._v("构成的：")]),_._v(" "),v("ul",[v("li",[_._v("索引列的值")]),_._v(" "),v("li",[_._v("主键值")]),_._v(" "),v("li",[_._v("页号")])]),_._v(" "),v("p",[_._v("也就是我们把"),v("code",[_._v("主键值")]),_._v("也添加到二级索引内节点中的目录项记录了，这样就能保证"),v("code",[_._v("B+")]),_._v("树每一层节点中各条目录项记录除"),v("code",[_._v("页号")]),_._v("这个字段外是唯一的，所以我们为"),v("code",[_._v("c2")]),_._v("列建立二级索引后的示意图实际上应该是这样子的：")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://static.xiaoliutalk.cn/img/202301031920624.jpg",alt:""}})]),_._v(" "),v("p",[_._v("这样我们再插入记录"),v("code",[_._v("(9, 1, 'c')")]),_._v("时，由于"),v("code",[_._v("页3")]),_._v("中存储的目录项记录是由"),v("code",[_._v("c2列 + 主键 + 页号")]),_._v("的值构成的，可以先把新记录的"),v("code",[_._v("c2")]),_._v("列的值和"),v("code",[_._v("页3")]),_._v("中各目录项记录的"),v("code",[_._v("c2")]),_._v("列的值作比较，如果"),v("code",[_._v("c2")]),_._v("列的值相同的话，可以接着比较主键值，因为"),v("code",[_._v("B+")]),_._v("树同一层中不同目录项记录的"),v("code",[_._v("c2列 + 主键")]),_._v("的值肯定是不一样的，所以最后肯定能定位唯一的一条目录项记录，在本例中最后确定新记录应该被插入到"),v("code",[_._v("页5")]),_._v("中。")]),_._v(" "),v("h3",{attrs:{id:"_2-3-一个页面最少存储2条记录"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-一个页面最少存储2条记录"}},[_._v("#")]),_._v(" 2.3. 一个页面最少存储2条记录")]),_._v(" "),v("p",[_._v("我们前边说过一个B+树只需要很少的层级就可以轻松存储数亿条记录，查询速度杠杠的！这是因为B+树本质上就是一个大的多层级目录，每经过一个目录时都会过滤掉许多无效的子目录，直到最后访问到存储真实数据的目录。那如果一个大的目录中只存放一个子目录是个啥效果呢？那就是目录层级非常非常非常多，而且最后的那个存放真实数据的目录中只能存放一条记录。费了半天劲只能存放一条真实的用户记录？逗我呢？所以"),v("code",[_._v("InnoDB")]),_._v("的一个数据页至少可以存放两条记录。")]),_._v(" "),v("h2",{attrs:{id:"_3-myisam中的索引方案简单介绍"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-myisam中的索引方案简单介绍"}},[_._v("#")]),_._v(" 3. MyISAM中的索引方案简单介绍")]),_._v(" "),v("p",[v("code",[_._v("MyISAM")]),_._v("的索引方案虽然也使用树形结构，但是却将索引和数据分开存储：")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("将表中的"),v("strong",[_._v("记录按照记录的插入顺序单独存储在一个文件")]),_._v("中，称之为"),v("strong",[_._v("数据文件")]),_._v("。这个文件并不划分为若干个数据页，有多少记录就往这个文件中塞多少记录就成了。我们可以通过行号而快速访问到一条记录。")]),_._v(" "),v("p",[v("code",[_._v("MyISAM")]),_._v("记录也需要记录头信息来存储一些额外数据，我们以上边唠叨过的"),v("code",[_._v("index_demo")]),_._v("表为例，看一下这个表中的记录使用"),v("code",[_._v("MyISAM")]),_._v("作为存储引擎在存储空间中的表示：")]),_._v(" "),v("p",[v("img",{attrs:{src:"https://static.xiaoliutalk.cn/img/202301031922384.jpg",alt:""}})]),_._v(" "),v("p",[_._v("由于在插入数据的时候并没有刻意按照主键大小排序，所以我们并不能在这些数据上使用二分法进行查找。")])]),_._v(" "),v("li",[v("p",[_._v("使用"),v("strong",[_._v("MyISAM")]),_._v("存储引擎的表会把索引信息另外存储到一个称为"),v("strong",[_._v("索引文件")]),_._v("的另一个文件中。"),v("strong",[_._v("MyISAM")]),_._v("会单独为表的主键创建一个索引，只不过在索引的叶子节点中存储的不是完整的用户记录，而是"),v("strong",[_._v("主键值 + 行号")]),_._v("的组合。也就是先通过索引找到对应的行号，再通过行号去找对应的记录！")]),_._v(" "),v("p",[_._v("这一点和"),v("strong",[_._v("InnoDB")]),_._v("是完全不相同的，在"),v("strong",[_._v("InnoDB")]),_._v("存储引擎中，我们只需要根据主键值对"),v("strong",[_._v("聚簇索引")]),_._v("进行一次查找就能找到对应的记录，而在"),v("strong",[_._v("MyISAM")]),_._v("中却需要进行一次"),v("strong",[_._v("回表")]),_._v("操作，意味着"),v("strong",[_._v("MyISAM")]),_._v("中建立的索引相当于全部都是"),v("strong",[_._v("二级索引")]),_._v("！")]),_._v(" "),v("p",[_._v("如果有需要的话，我们也可以对其它的列分别建立索引或者建立联合索引，原理和"),v("strong",[_._v("InnoDB")]),_._v("中的索引差不多，不过在叶子节点处存储的是"),v("strong",[_._v("相应的列 + 行号")]),_._v("。这些索引也全部都是"),v("strong",[_._v("二级索引")]),_._v("。")])])]),_._v(" "),v("h2",{attrs:{id:"_4-mysql中创建和删除索引的语句"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-mysql中创建和删除索引的语句"}},[_._v("#")]),_._v(" 4. MySQL中创建和删除索引的语句")]),_._v(" "),v("p",[v("code",[_._v("InnoDB")]),_._v("和"),v("code",[_._v("MyISAM")]),_._v("会自动为主键或者声明为"),v("strong",[_._v("UNIQUE")]),_._v("的列去自动建立"),v("code",[_._v("B+")]),_._v("树索引，但是如果我们想为其他的列建立索引就需要我们显式的去指明。为啥不自动为每个列都建立个索引呢？别忘了，每建立一个索引都会建立一棵"),v("code",[_._v("B+")]),_._v("树，每插入一条记录都要维护各个记录、数据页的排序关系，这是很费性能和存储空间的。")]),_._v(" "),v("p",[_._v("我们可以在创建表的时候指定需要建立索引的单个列或者建立联合索引的多个列：")]),_._v(" "),v("div",{staticClass:"language-sql line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-sql"}},[v("code",[v("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("CREATE")]),_._v(" TALBE 表名 "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("(")]),_._v("\n    各种列的信息 ··· "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(",")]),_._v(" \n    "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("[")]),v("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("KEY")]),v("span",{pre:!0,attrs:{class:"token operator"}},[_._v("|")]),v("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("INDEX")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("]")]),_._v(" 索引名 "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("(")]),_._v("需要被索引的单个列或多个列"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(")")]),_._v("\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(")")]),_._v("\n")])]),_._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[_._v("1")]),v("br"),v("span",{staticClass:"line-number"},[_._v("2")]),v("br"),v("span",{staticClass:"line-number"},[_._v("3")]),v("br"),v("span",{staticClass:"line-number"},[_._v("4")]),v("br")])]),v("p",[_._v("其中的"),v("code",[_._v("KEY")]),_._v("和"),v("code",[_._v("INDEX")]),_._v("是同义词，任意选用一个就可以。我们也可以在修改表结构的时候添加索引：")]),_._v(" "),v("div",{staticClass:"language-sql line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-sql"}},[v("code",[v("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("ALTER")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("TABLE")]),_._v(" 表名 "),v("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("ADD")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("[")]),v("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("INDEX")]),v("span",{pre:!0,attrs:{class:"token operator"}},[_._v("|")]),v("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("KEY")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("]")]),_._v(" 索引名 "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("(")]),_._v("需要被索引的单个列或多个列"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),_._v("\n")])]),_._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[_._v("1")]),v("br")])]),v("p",[_._v("也可以在修改表结构的时候删除索引：")]),_._v(" "),v("div",{staticClass:"language-sql line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-sql"}},[v("code",[v("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("ALTER")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("TABLE")]),_._v(" 表名 "),v("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("DROP")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("[")]),v("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("INDEX")]),v("span",{pre:!0,attrs:{class:"token operator"}},[_._v("|")]),v("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("KEY")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("]")]),_._v(" 索引名"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),_._v("\n")])]),_._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[_._v("1")]),v("br")])]),v("p",[_._v("比方说我们想在创建"),v("code",[_._v("index_demo")]),_._v("表的时候就为"),v("code",[_._v("c2")]),_._v("和"),v("code",[_._v("c3")]),_._v("列添加一个"),v("code",[_._v("联合索引")]),_._v("，可以这么写建表语句：")]),_._v(" "),v("div",{staticClass:"language-sql line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-sql"}},[v("code",[v("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("CREATE")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("TABLE")]),_._v(" index_demo"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("(")]),_._v("\n    c1 "),v("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("INT")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(",")]),_._v("\n    c2 "),v("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("INT")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(",")]),_._v("\n    c3 "),v("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("CHAR")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("(")]),v("span",{pre:!0,attrs:{class:"token number"}},[_._v("1")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(",")]),_._v("\n    "),v("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("PRIMARY")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("KEY")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("(")]),_._v("c1"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(",")]),_._v("\n    "),v("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("INDEX")]),_._v(" idx_c2_c3 "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v("(")]),_._v("c2"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(",")]),_._v(" c3"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(")")]),_._v("\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),_._v("\n")])]),_._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[_._v("1")]),v("br"),v("span",{staticClass:"line-number"},[_._v("2")]),v("br"),v("span",{staticClass:"line-number"},[_._v("3")]),v("br"),v("span",{staticClass:"line-number"},[_._v("4")]),v("br"),v("span",{staticClass:"line-number"},[_._v("5")]),v("br"),v("span",{staticClass:"line-number"},[_._v("6")]),v("br"),v("span",{staticClass:"line-number"},[_._v("7")]),v("br")])]),v("p",[_._v("在这个建表语句中我们创建的索引名是"),v("code",[_._v("idx_c2_c3")]),_._v("，这个名称可以随便起，不过我们还是建议以"),v("code",[_._v("idx_")]),_._v("为前缀，后边跟着需要建立索引的列名，多个列名之间用下划线"),v("code",[_._v("_")]),_._v("分隔开。")]),_._v(" "),v("p",[_._v("如果我们想删除这个索引，可以这么写：")]),_._v(" "),v("div",{staticClass:"language-sql line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-sql"}},[v("code",[v("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("ALTER")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("TABLE")]),_._v(" index_demo "),v("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("DROP")]),_._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[_._v("INDEX")]),_._v(" idx_c2_c3"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[_._v(";")]),_._v("、\n")])]),_._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[_._v("1")]),v("br")])])])}),[],!1,null,null,null);v.default=a.exports}}]);