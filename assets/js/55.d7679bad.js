(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{427:function(s,t,a){"use strict";a.r(t);var n=a(1),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[s._v("转自 52pojie 论坛 @"),t("a",{attrs:{href:"https://www.52pojie.cn/home.php?mod=space&uid=1744270",target:"_blank",rel:"noopener noreferrer"}},[s._v("yuluo829"),t("OutboundLink")],1),s._v(" 感谢大佬的无私奉献。")]),s._v(" "),t("h1",{attrs:{id:"数据库"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据库"}},[s._v("#")]),s._v(" 数据库")]),s._v(" "),t("hr"),s._v(" "),t("h2",{attrs:{id:"数据库的简单介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据库的简单介绍"}},[s._v("#")]),s._v(" 数据库的简单介绍：")]),s._v(" "),t("h3",{attrs:{id:"数据库概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据库概述"}},[s._v("#")]),s._v(" 数据库概述：")]),s._v(" "),t("blockquote",[t("p",[s._v("数据库：")]),s._v(" "),t("p",[s._v("​\t英文单词DataBase，简称DB。按照一定格式存储数据的一些文件的组合或者集合")]),s._v(" "),t("p",[s._v("数据可管理系统：")]),s._v(" "),t("p",[s._v("​\tDataBaseManagment, 简称DBMS。专门用来管理数据库的，对数据库中的数据进行增删改查。")]),s._v(" "),t("p",[s._v("​\t常见的数据库系统：MySQL，Oracle，MS SqlServer，DB2，sybase……")])]),s._v(" "),t("blockquote",[t("p",[s._v("SQL：结构化查询语言")]),s._v(" "),t("p",[s._v("​\t程序员通过编写SQL语句，然后DSMS负责执行SQL语句，完成数据库的增删改查操作。")])]),s._v(" "),t("blockquote",[t("p",[s._v("三者之间的关系：")]),s._v(" "),t("p",[s._v("DBMS --\x3e 执行 --\x3e SQL --\x3e 操作 --\x3eDB")])]),s._v(" "),t("h3",{attrs:{id:"常用的数据库命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常用的数据库命令"}},[s._v("#")]),s._v(" 常用的数据库命令")]),s._v(" "),t("p",[s._v("退出MySQl")]),s._v(" "),t("blockquote",[t("p",[t("code",[s._v("exit")])])]),s._v(" "),t("p",[s._v("显示所有的数据库")]),s._v(" "),t("blockquote",[t("p",[t("code",[s._v("show DataBases;")])]),s._v(" "),t("p",[s._v("MySQL默认自带了四个数据库")])]),s._v(" "),t("p",[s._v("选择使用数据库")]),s._v(" "),t("blockquote",[t("p",[s._v('use + "库名";')]),s._v(" "),t("p",[t("code",[s._v("use text;")])])]),s._v(" "),t("p",[s._v("创建数据库")]),s._v(" "),t("blockquote",[t("p",[s._v('create databases + "数据库名"；')])]),s._v(" "),t("p",[s._v("查看数据库中那些表")]),s._v(" "),t("blockquote",[t("p",[s._v("show tables;")])]),s._v(" "),t("p",[s._v("查看数据库的版本号")]),s._v(" "),t("blockquote",[t("p",[s._v("select version();")])]),s._v(" "),t("p",[s._v("查看当前使用的数据库")]),s._v(" "),t("blockquote",[t("p",[s._v("select database();")])]),s._v(" "),t("p",[s._v("终止命令的输入")]),s._v(" "),t("blockquote",[t("p",[s._v("/C 或者 ; 结束")])]),s._v(" "),t("p",[s._v("查看表中的记录和字段")]),s._v(" "),t("blockquote",[t("p",[s._v("desc + 表名")])]),s._v(" "),t("p",[t("strong",[s._v("注意：MySQL不见分号不执行，当输入分号时才执行语句。")])]),s._v(" "),t("h3",{attrs:{id:"表-table-的理解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#表-table-的理解"}},[s._v("#")]),s._v(" 表(table)的理解")]),s._v(" "),t("p",[s._v("数据库中的最基本单元：表。")]),s._v(" "),t("p",[s._v("数据库当中是以表格的形式来表示数据。因为表比较直观。")]),s._v(" "),t("p",[s._v("任何一张表都有行和列")]),s._v(" "),t("p",[s._v("​\t行（row）：被称为数据/ 记录")]),s._v(" "),t("p",[s._v("​\t列（column）：被称为字段")]),s._v(" "),t("h3",{attrs:{id:"sql语句的分类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sql语句的分类"}},[s._v("#")]),s._v(" SQL语句的分类")]),s._v(" "),t("blockquote",[t("p",[s._v("DQL:数据查询语言（凡是带有select关键字的语言）")]),s._v(" "),t("p",[s._v("​\tselect ……")]),s._v(" "),t("p",[s._v("DML:数据操作语言（凡是对"),t("strong",[s._v("表当中的数据进行增删改查的都是DML")]),s._v("）")]),s._v(" "),t("p",[s._v("​\tinsert \t增")]),s._v(" "),t("p",[s._v("​\tdelete \t删")]),s._v(" "),t("p",[s._v("​\tupdate\t改")]),s._v(" "),t("p",[s._v("DDL:数据定义语言（凡是带有create，drop，alter的都是DDL）")]),s._v(" "),t("p",[s._v("​\t"),t("strong",[s._v("DDL主要操作的是表的结构。不是表中的数据")]),s._v("。")]),s._v(" "),t("p",[s._v("​\tcreate \t新建")]),s._v(" "),t("p",[s._v("​\tdrop\t\t删除")]),s._v(" "),t("p",[s._v("​\talter \t\t修改")]),s._v(" "),t("p",[s._v("TCL:事务控制语言")]),s._v(" "),t("p",[s._v("​\t事务提交：commit")]),s._v(" "),t("p",[s._v("​\t事务回滚：rollback")]),s._v(" "),t("p",[s._v("DCL:是数据控制语言")]),s._v(" "),t("p",[s._v("​\t例如：授权：\t\tgrant。")]),s._v(" "),t("p",[s._v("​\t\t\t\t撤销权限：revoke。")])]),s._v(" "),t("h3",{attrs:{id:"导入数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#导入数据"}},[s._v("#")]),s._v(" 导入数据")]),s._v(" "),t("blockquote",[t("p",[s._v('source + "路径"')]),s._v(" "),t("p",[s._v("路径中不能有中文")])]),s._v(" "),t("h3",{attrs:{id:"查看表结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查看表结构"}},[s._v("#")]),s._v(" 查看表结构")]),s._v(" "),t("blockquote",[t("p",[s._v("查看表中的数据")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" 表名"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//统一执行这个SQL语句。")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("eg：select * from sys;")])]),s._v(" "),t("blockquote",[t("p",[s._v("查看表的基本结构")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("describe")]),s._v("缩写为"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("desc")]),s._v("。\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("desc")]),s._v(" 表名"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\neg："),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("desc")]),s._v(" sys"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])])]),s._v(" "),t("blockquote",[t("p",[s._v("查看表的详细结构")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("show")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" 表名"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\neg："),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("show")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" emp_1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])])]),s._v(" "),t("h2",{attrs:{id:"简单查询语句"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#简单查询语句"}},[s._v("#")]),s._v(" 简单查询语句")]),s._v(" "),t("h3",{attrs:{id:"查询一个字段"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查询一个字段"}},[s._v("#")]),s._v(" 查询一个字段")]),s._v(" "),t("p",[s._v("select 字段名 from 表名;")]),s._v(" "),t("p",[s._v("​\t其中：select和from都是关键字")]),s._v(" "),t("p",[s._v("​\t\t\t\t字段名和表名是标识符。")]),s._v(" "),t("h3",{attrs:{id:"查询多个字段"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查询多个字段"}},[s._v("#")]),s._v(" 查询多个字段")]),s._v(" "),t("p",[s._v("使用逗号隔开")]),s._v(" "),t("p",[s._v("select 字段名,字段名,字段名 from 表名;")]),s._v(" "),t("h3",{attrs:{id:"查询所有字段"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查询所有字段"}},[s._v("#")]),s._v(" 查询所有字段")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("写上每个字段")]),s._v(" "),t("p",[s._v("select a,b,c,d... from 表名;")])]),s._v(" "),t("li",[t("p",[s._v("可以使用*;")]),s._v(" "),t("p",[s._v("select * from 表名;")]),s._v(" "),t("p",[s._v("缺点：*会先转换称为所有的字段名。")]),s._v(" "),t("p",[s._v("​\t\t\t效率低；")]),s._v(" "),t("p",[s._v("​\t\t\t可读性差，")]),s._v(" "),t("p",[s._v("​\t\t\t不建议在实际开发中使用。")])])]),s._v(" "),t("h3",{attrs:{id:"给查询的列起别名"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#给查询的列起别名"}},[s._v("#")]),s._v(" 给查询的列起别名")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" 字段名"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("字段名 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" 别名 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" 表名"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v("关键字可以省略\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" 字段名"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("字段名 别名 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" 表名"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("注意：只是将显示的结果列名显示为别名，并不会改变表中的列名。")]),s._v(" "),t("p",[s._v("​\t\t\tselect语句只负责查询，永远不会进行修改操作。")]),s._v(" "),t("p",[s._v("起别名时，别名里面有空格的时候")]),s._v(" "),t("p",[s._v("select 字段名,字段名 as 别名(dept name) from 表名;")]),s._v(" "),t("p",[s._v("别名中有括号时，使用单引号或者*"),t("u",[t("strong",[s._v("双引号括住")])]),s._v("*。")]),s._v(" "),t("p",[t("strong",[s._v("注意：在所有的数据库中，字符串统一的用法是用单引号括起来，单引号是标准的用法，双引号在Oracle中用不了。但是在MySQL中可以使用。")])]),s._v(" "),t("h3",{attrs:{id:"列参与数学运算"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#列参与数学运算"}},[s._v("#")]),s._v(" 列参与数学运算")]),s._v(" "),t("p",[s._v("字段可以使用数学表达式参与运算")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" sal"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" 字段名 字段名"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("数学运算 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" 表名\n起别名\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" sal"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" yearsal "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n别名是中文时用单引号括起来。\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" sal"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'年薪'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h3",{attrs:{id:"条件查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#条件查询"}},[s._v("#")]),s._v(" 条件查询")]),s._v(" "),t("p",[s._v("不查询表中的所有数据，只查询出来符合条件的数据。")]),s._v(" "),t("p",[s._v("语法格式：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v("\n\t字段"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("，字段"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("，字段"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("……\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v("\n\t表名\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v("\n\t条件"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("blockquote",[t("p",[s._v("条件：")]),s._v(" "),t("p",[s._v("​\t= 等于")]),s._v(" "),t("p",[s._v("​\t"),t("code",[s._v("查询薪资等于800的员工姓名和编号：")])]),s._v(" "),t("p",[s._v("​\t"),t("code",[s._v("select empno,ename from emp where sal = 800'")])]),s._v(" "),t("p",[s._v("​\t<> 或 != 不等于")]),s._v(" "),t("p",[s._v("​\t"),t("code",[s._v("select empno,ename from emp where sal != 800;")])]),s._v(" "),t("p",[s._v("​\t"),t("code",[s._v("select empno,ename from emp where sal <> 800;")])]),s._v(" "),t("p",[s._v("​\t< 小于")]),s._v(" "),t("p",[s._v("​\t<=  小于等于")]),s._v(" "),t("p",[s._v("​\t> 大于")]),s._v(" "),t("p",[s._v("​\t >= 大于等于")]),s._v(" "),t("p",[s._v("​\tbetween ... and ... 两个值之间，等同于>= and <=")]),s._v(" "),t("p",[s._v("​\t1,")]),s._v(" "),t("p",[s._v("​\t"),t("code",[s._v("查询薪资在2450到3000之间的员工信息？包括2450和3000")])]),s._v(" "),t("p",[s._v("​\t"),t("code",[s._v("select empno, ename,sal from emp where sal >= 2450 and sal <= 3000;")])]),s._v(" "),t("p",[s._v("​\t2,")]),s._v(" "),t("p",[s._v("​\t"),t("code",[s._v("select empno,ename,sal from emp where sal between 2450 and 3000;")])]),s._v(" "),t("p",[s._v("​\t"),t("strong",[s._v("注意：使用between……and……的时候，必须左小右大，左大\t有小查不出来值。")])]),s._v(" "),t("p",[s._v("​\t is null 为 null  (is not null不为空)")]),s._v(" "),t("p",[s._v("​\t"),t("code",[s._v("查询那些员工的薪资或者津贴为null")])]),s._v(" "),t("p",[s._v("​\t"),t("code",[s._v("select empno,ename,sal from emp where comm is null;")])]),s._v(" "),t("p",[s._v("​\t"),t("strong",[s._v("注意：在数据库中null不能使用等号进行衡量。需要使用is null。因为数据库中的null代表什么也没有，不是一个值，所以不饿能使用等号衡量。")])]),s._v(" "),t("p",[s._v("​\t"),t("code",[s._v("查询那些员工的薪资或者津贴不为null")])]),s._v(" "),t("p",[t("code",[s._v("select")])]),s._v(" "),t("p",[s._v("​\t"),t("code",[s._v("empno,ename,sal")])]),s._v(" "),t("p",[t("code",[s._v("from")])]),s._v(" "),t("p",[s._v("​\t"),t("code",[s._v("emp")])]),s._v(" "),t("p",[t("code",[s._v("where")])]),s._v(" "),t("p",[s._v("​\t"),t("code",[s._v("comm is not null;")])]),s._v(" "),t("p",[s._v("​\tand 并且")]),s._v(" "),t("p",[s._v("​\t"),t("code",[s._v("查询工作岗位是MANAGE并且工资大于2500的员工信息")])]),s._v(" "),t("p",[t("code",[s._v("select")])]),s._v(" "),t("p",[s._v("​\t"),t("code",[s._v("empuo,ename,job,sal")])]),s._v(" "),t("p",[t("code",[s._v("from")])]),s._v(" "),t("p",[s._v("​\t"),t("code",[s._v("emp")])]),s._v(" "),t("p",[t("code",[s._v("where")])]),s._v(" "),t("p",[s._v("​\t"),t("code",[s._v("job = 'MANAGER' and sal > 2500;")])]),s._v(" "),t("p",[s._v("​\tor 或者")]),s._v(" "),t("p",[t("code",[s._v("select")])]),s._v(" "),t("p",[s._v("​\t"),t("code",[s._v("empno,ename,job")])]),s._v(" "),t("p",[t("code",[s._v("from")])]),s._v(" "),t("p",[s._v("​\t"),t("code",[s._v("emp")])]),s._v(" "),t("p",[t("code",[s._v("where")])]),s._v(" "),t("p",[s._v("​\t "),t("code",[s._v("job = 'MANAGER'or'SALESMAN';")])]),s._v(" "),t("p",[s._v("​\t"),t("strong",[s._v("and和or同时出现的时候有没有先后顺序的问题：and的优先级比or高,想要or先执行加小括号")])]),s._v(" "),t("p",[s._v("​\t"),t("code",[s._v("找出工资大于2500并且部门编号为10或者20的所有员工：")])]),s._v(" "),t("p",[t("code",[s._v("select")])]),s._v(" "),t("p",[s._v("​\t"),t("code",[s._v("*")])]),s._v(" "),t("p",[t("code",[s._v("from")])]),s._v(" "),t("p",[s._v("​\t"),t("code",[s._v("emp")])]),s._v(" "),t("p",[t("code",[s._v("where")])]),s._v(" "),t("p",[s._v("​\t"),t("code",[s._v("sal > 2500 and (deptno = 10 or deptno = 20);")])]),s._v(" "),t("p",[s._v("​\tin 包含，相当于多个 or （not in不在这个范围中）")]),s._v(" "),t("p",[s._v("​\t"),t("code",[s._v("查询工作岗位是‘MANAGER’和‘SALESMAN’")])]),s._v(" "),t("p",[s._v("​\t"),t("code",[s._v("select")])]),s._v(" "),t("p",[s._v("​\t\t"),t("code",[s._v("empno,ename,sal")])]),s._v(" "),t("p",[s._v("​\t"),t("code",[s._v("from")])]),s._v(" "),t("p",[s._v("​\t\t"),t("code",[s._v("emp")])]),s._v(" "),t("p",[s._v("​\t"),t("code",[s._v("where")])]),s._v(" "),t("p",[s._v("​\t\t"),t("code",[s._v("job = 'MANAGER' or job = 'SALESMAN'")]),s._v(";")]),s._v(" "),t("p",[s._v("​\t"),t("code",[s._v("select")])]),s._v(" "),t("p",[s._v("​\t\t"),t("code",[s._v("empno,ename,sal")])]),s._v(" "),t("p",[s._v("​\t"),t("code",[s._v("from")])]),s._v(" "),t("p",[s._v("​\t\t"),t("code",[s._v("emp")])]),s._v(" "),t("p",[s._v("​\t"),t("code",[s._v("where")])]),s._v(" "),t("p",[s._v("​\t\t"),t("code",[s._v("job in ('MANAGER','SALESMAN'); //这个不是表示800-5000，表示的是是800和5000的。")])]),s._v(" "),t("p",[s._v("​\tnot 可以取反，主要用在is 或 in 中")]),s._v(" "),t("p",[s._v("​\t\tis null;")]),s._v(" "),t("p",[s._v("​\t\tis not null;")]),s._v(" "),t("p",[s._v("​\t\tin;")]),s._v(" "),t("p",[s._v("​\t\tnot in;")]),s._v(" "),t("p",[s._v("​\tlike")]),s._v(" "),t("p",[s._v("​\t\t称为模糊查询，支持%和下划线匹配")]),s._v(" "),t("p",[s._v("​\t\t% 匹配任意多个字符")]),s._v(" "),t("p",[s._v("​\t\t下划线：任意一个字符")]),s._v(" "),t("p",[s._v("​\t\t%和__是两个特殊符号。")]),s._v(" "),t("p",[s._v("​\t"),t("code",[s._v("找出名字中含有o的：")])]),s._v(" "),t("p",[s._v("​\t\t"),t("code",[s._v("select ename from emp where ename like '%o%;'")])]),s._v(" "),t("p",[s._v("​\t"),t("code",[s._v("找出名字中以t结尾的：")])]),s._v(" "),t("p",[s._v("​\t\t"),t("code",[s._v("select ename from emp where ename like '%t;'")])]),s._v(" "),t("p",[s._v("​\t"),t("code",[s._v("找出名字中第一个是k的：")])]),s._v(" "),t("p",[s._v("​\t\t"),t("code",[s._v("select ename from emp where ename like 'k%;'")])]),s._v(" "),t("p",[s._v("​\t"),t("code",[s._v("找出名字中第二个字母是A的：")])]),s._v(" "),t("p",[s._v("​\t\t"),t("code",[s._v("select ename from emp where ename like '_A%;'")])]),s._v(" "),t("p",[s._v("​\t"),t("code",[s._v("找出名字中第三个字母是R的：")])]),s._v(" "),t("p",[s._v("​\t\t"),t("code",[s._v("select ename from emp where ename like '__R%;'")])]),s._v(" "),t("p",[s._v("​\t"),t("code",[s._v("找出名字中有'_'的：//: \\是转义字符。")])]),s._v(" "),t("p",[s._v("​\t\t"),t("code",[s._v("select ename from emp where ename like '%\\_%;'")])])]),s._v(" "),t("h2",{attrs:{id:"排序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#排序"}},[s._v("#")]),s._v(" 排序")]),s._v(" "),t("h3",{attrs:{id:"查询所有员工薪资-排序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查询所有员工薪资-排序"}},[s._v("#")]),s._v(" 查询所有员工薪资，排序")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v("\n\tename"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("sal\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v("\n\temp\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v("\n\tsal"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//默认是升序排列。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//指定降序")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v("\n\tename"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("sal\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v("\n\temp\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v("\n\tsal "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("desc")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//指定升序")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v("\n\tename"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("sal\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v("\n\temp\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v("\n\tsal "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("asc")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br")])]),t("h3",{attrs:{id:"两个字段排序-多个字段排序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#两个字段排序-多个字段排序"}},[s._v("#")]),s._v(" 两个字段排序，多个字段排序")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//查询员工名字和薪资，要求按照薪资升序，如果薪资一样的话，再按照名字升序排列。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v("\n\tename"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("sal\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v("\n\temp\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v("\n\tsal "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("asc")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ename "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("asc")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h3",{attrs:{id:"根据字段的位置排列"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#根据字段的位置排列"}},[s._v("#")]),s._v(" 根据字段的位置排列")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("sal "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//2表示第二列。是sal。不建在开发中这样写，因为程序不健壮。")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h3",{attrs:{id:"综合案例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#综合案例"}},[s._v("#")]),s._v(" 综合案例")]),s._v(" "),t("p",[s._v("找出工资在1250-3000之间的员工信息，要求按照薪资降序排列")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v("\n\tename"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("sal\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v("\n\temp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v("\n\tsal "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("between")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1250")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3000")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v("\n\tsal "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("desc")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//关键字顺序不能改变")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n程序的执行步骤：\n\t第一步：执行"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v("从"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v("中查询\n\t第二步：执行"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v("筛选过滤\n\t第三步：执行"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v("输出数据\n\t第四步：执行"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v("，排序总是在最后执行！\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br")])]),t("h2",{attrs:{id:"数据处理函数-单行处理函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据处理函数-单行处理函数"}},[s._v("#")]),s._v(" 数据处理函数（单行处理函数）")]),s._v(" "),t("h3",{attrs:{id:"数据处理函数又被称为单行处理函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据处理函数又被称为单行处理函数"}},[s._v("#")]),s._v(" 数据处理函数又被称为单行处理函数")]),s._v(" "),t("p",[s._v("单行处理函数的特点是：一个输入一个输出。")]),s._v(" "),t("p",[s._v("和单行处理函数对应的是：多行处理函数（多个输入，一个输出）。")]),s._v(" "),t("h3",{attrs:{id:"常见的单行处理函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常见的单行处理函数"}},[s._v("#")]),s._v(" 常见的单行处理函数：")]),s._v(" "),t("blockquote",[t("p",[s._v("sum\t\t\t\t\t求和")]),s._v(" "),t("p",[s._v("Lower\t\t\t\t转换小写")]),s._v(" "),t("p",[s._v("​\t"),t("code",[s._v("将姓名转换成小写字母显示")])]),s._v(" "),t("p",[s._v("​\t"),t("code",[s._v("select lower(ename) as ename from emp;")])]),s._v(" "),t("p",[s._v("upper\t\t\t\t转换大写")]),s._v(" "),t("p",[s._v("substr\t\t\t\t取子串（substr（被截取的字符串，起始下标，截取的长度））")]),s._v(" "),t("p",[s._v("​\t"),t("code",[s._v("select substr(ename, 1, 1) as ename from emp;")])]),s._v(" "),t("p",[s._v("​\t"),t("strong",[s._v("注意：起始下标从1开始，没有0。")])]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//找出员工名字第一个字母是A的员工信息？")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//第一种方式：模糊查询\t")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" ename "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("like")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'A%'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//第二种方式：substr函数\t")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename，"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp，"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" substr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ename"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'A'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//首字母大写\t")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" concat"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("upper"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("substr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" substr"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("length"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" result\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("p",[s._v("length\t\t\t\t取长度")]),s._v(" "),t("p",[s._v("​\t"),t("code",[s._v("select length(ename) enamelength from emp;")])]),s._v(" "),t("p",[s._v("trim\t\t\t\t\t去空格")]),s._v(" "),t("p",[s._v("​\t"),t("code",[s._v("//去除查询条件的空格。")])]),s._v(" "),t("p",[s._v("​\t"),t("code",[s._v("select * from emp where ename = trim(' KING');")])]),s._v(" "),t("p",[s._v("str_to_date\t\t将字符串转换成日期")]),s._v(" "),t("p",[s._v("date_format\t\t格式化日期")]),s._v(" "),t("p",[s._v("format\t\t\t\t设置千分位")]),s._v(" "),t("p",[s._v("case...when...then...when...then..else...end")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//当工作岗位是MANAGER的时候，工资上调10%，当工作岗位是SALESMAN的时候，工资上调50%")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//注意：不修改数据库，只是将查询结果显示为工资上调。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" job"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" sal "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" oldsal"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" \n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" job \n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("when")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'MANAGER'")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v(" sal "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.1")]),s._v(" \n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("when")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'SALSMAN'")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v(" sal "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.5")]),s._v(" \n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" sal \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" newsal "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("p",[s._v("round\t\t\t\t四舍五入")]),s._v(" "),t("p",[s._v("​\t"),t("code",[s._v("select 字段名 from 表名;")])]),s._v(" "),t("p",[s._v("​\t"),t("code",[s._v("select 'abc'/1000 from emp;")])]),s._v(" "),t("p",[s._v("​\t"),t("strong",[s._v("注意：select后面可以跟某个表的字段名（可以等同于变量名），\t也可以跟'字面值/字面量'（数据），")])]),s._v(" "),t("p",[s._v("​\t"),t("code",[s._v("select 21000 as num from dept;")])]),s._v(" "),t("p",[s._v("​\t"),t("code",[s._v("select round(1234.6756, 0) as result from emp;")])]),s._v(" "),t("p",[s._v("​\t"),t("code",[s._v("//四舍五入的结果是1234。0是不保留小数，1，保留一位小数.1234.5。-1保留到十位.1230.-2，保留到百位1200")])]),s._v(" "),t("p",[s._v("rand()\t\t\t\t生成随机数")]),s._v(" "),t("p",[s._v("ifnull\t\t\t\t\t可以将null转换成一个具体值(如果是空的话，当作一个值来处理。)")]),s._v(" "),t("p",[t("strong",[s._v("在所有的数据库当中，只要有null参与的数学运算的结果就是NULL。")])]),s._v(" "),t("p",[s._v("​\t"),t("code",[s._v("计算所有员工的年薪：")])]),s._v(" "),t("p",[s._v("​\t"),t("code",[s._v("select ename, sal + comm as salcomm from emp;")])]),s._v(" "),t("p",[s._v("​\t为了避免出现NULL值。使用ifnull函数（如果是null，当作0来处理。）")]),s._v(" "),t("p",[s._v("​\t"),t("code",[s._v("select ename, (sal + ifnull(comm, 0)) * 12 as yearsal from emp;")])])]),s._v(" "),t("h2",{attrs:{id:"分组函数-多行处理函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分组函数-多行处理函数"}},[s._v("#")]),s._v(" 分组函数（多行处理函数）")]),s._v(" "),t("p",[s._v("多行处理函数的特点：输入多行，最终输出一行")]),s._v(" "),t("p",[s._v("5个：")]),s._v(" "),t("ol",[t("li",[s._v("count\t\t计数")]),s._v(" "),t("li",[s._v("sum     求和")]),s._v(" "),t("li",[s._v("avg    平均值")]),s._v(" "),t("li",[s._v("max   最大值")]),s._v(" "),t("li",[s._v("min    最小值")])]),s._v(" "),t("p",[t("strong",[s._v("注意：分组函数在使用的时候必须先进行分组，然后才能使用。如果你没有对数据进行分组，整张表默认为一组。")])]),s._v(" "),t("blockquote",[t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[s._v("找出最高工资\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("max")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n找出最低工资\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("min")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n计算工资和\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sum")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n计算平均工资\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("avg")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n计算员工数量总和\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("count")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ename"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("p",[t("strong",[s._v("分组函数在使用时的注意事项：")])]),s._v(" "),t("p",[s._v("1，分组函数在使用的时候会自动忽略null；null不是一个值，是什么也没有。不用加null过滤。")]),s._v(" "),t("p",[s._v("2，分组函数中count(*)和count(具体字段)的区别：")]),s._v(" "),t("p",[s._v("​\tcount(*)：统计表当中的总行数。（只要有一行数据，count ++）")]),s._v(" "),t("p",[s._v("​\t\t\t\t\t\t因为每一行记录中数据不可能都为null。一行数据中有一列不为null，则这行数据就是有效的。")]),s._v(" "),t("p",[s._v("​\tcount(具体字段)：表示统计该字段下所有不为null的元素的总数。")]),s._v(" "),t("p",[s._v("3，分组程序不能够直接使用在where子句中")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//找出比最低工资高的员工的信息。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("sal "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" sal "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("min")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//表面没有问题，但运行时出现错误。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//Invaild use of group function因为分组函数在使用的时候必须先分组，where执行的时候还没有分组。所以where后面不能出现分组函数")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("4，所有的分组函数可以组合在一起使用。")]),s._v(" "),t("p",[t("code",[s._v("select sum(sal),min(sal),max(sal),count(*),avg(sal) from emp;")])])]),s._v(" "),t("h2",{attrs:{id:"分组查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分组查询"}},[s._v("#")]),s._v(" 分组查询（***********）")]),s._v(" "),t("p",[s._v("概述：在实际应用中，可能有这样的需求，需要先进行分组，然后对每一组的数据进行操作。这个时候需要分组查。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//计算每个部门的工资和//计算每个工作岗位的平均薪资")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//找出每个工作岗位的最高薪资……组合之前的关键字，分析它们的执行顺序")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n以上关键字的顺序不能颠倒。执行顺序：\t\n\t"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("，"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v("\t\n\t"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("，"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v("\t\n\t"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("，"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v("\t\n\t"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("，"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v("\t\n\t"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("，"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sum")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n这个没有分组，为什么可以执行\n因为"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v("在"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v("后面执行。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("h3",{attrs:{id:"找出每个工作岗位的工资和"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#找出每个工作岗位的工资和"}},[s._v("#")]),s._v(" 找出每个工作岗位的工资和")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[s._v("实现思路:按照工作岗位进行分组，对分组逐个求和。"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v("\tjob"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sum")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v("\tempgroup "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v("\tjob"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("以上语句的执行顺序\t先从emp表中进行查询\t根据job字段进行分组\t然后对每一组的数据进行"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sum")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v("\tename"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("job"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sum")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v("\tempgroup "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v("\tjob"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("以上代码在oracle执行报错，在mysql中可以执行，但是毫无意义。Oracle的语法比MySQL严格\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("strong",[s._v("结论：在一条select语句后面，如果有group by语句的话；select后面只能跟：参加分组的字段，以及分组函数。其他的一律不能跟。")])]),s._v(" "),t("h3",{attrs:{id:"找出每个部门的最高薪资"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#找出每个部门的最高薪资"}},[s._v("#")]),s._v(" 找出每个部门的最高薪资")]),s._v(" "),t("div",{staticClass:"language-SQL line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" \tename"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("deptno"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("max")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" deptno"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v("字段后面加ename没有意义，另外Oracle会报错。正确写法："),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" deptno"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("max")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" deptno"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"找出每个部门-不同工作岗位的最高薪资"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#找出每个部门-不同工作岗位的最高薪资"}},[s._v("#")]),s._v(" 找出"),t("u",[s._v("每个部门，不同工作岗位")]),s._v("的最高薪资")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("两个字段联合成一个字段看"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v("\tdeptno"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("job"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("max")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v("\temp "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" job"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" deptno"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\t\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"找出每个部门的最高薪资-要求显示最高薪资大于3000的。使用having可以对分完组之后的数据进一步过滤。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#找出每个部门的最高薪资-要求显示最高薪资大于3000的。使用having可以对分完组之后的数据进一步过滤。"}},[s._v("#")]),s._v(" 找出每个部门的最高薪资,要求显示最高薪资大于3000的。使用having可以对分完组之后的数据进一步过滤。")]),s._v(" "),t("blockquote",[t("p",[t("em",[t("strong",[s._v("having不能单独使用，不能代替wheremhaving，必须和group by联合使用。")])])])]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[s._v("第一步："),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" deptno"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("max")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" deptno"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("第二步："),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" \tdeptno"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("max")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" deptno "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("having")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("max")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("以上的代码执行效率很低。可以这样考虑：先将大于"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3000")]),s._v("的找出来，再分组"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" deptno"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("max")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" sal "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3000")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v("\tdeptno"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("优化策略："),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v("和"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("having")]),s._v("，优先选择"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v("，"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v("实在完成不了，再选择 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("having")]),s._v("。 \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"where没办法解决的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#where没办法解决的"}},[s._v("#")]),s._v(" where没办法解决的？")]),s._v(" "),t("p",[t("em",[t("strong",[s._v("找出每个部门的平均薪资，要求显示薪资高于2500的")])])]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//第一步：找出每个部门的平均薪资。select deptno,avg(sal)from\temp group by\tdeptno;//第二步：要求显示薪资高于2500的select\tdeptno,avg(sal)from\tempwhere\t\t//where后面不能使用分组函数。\tavg(sal) > 2500group by\tdeptno;\t改为：优化策略。select\tdeptno,avg(sal)from\tempgroup by\tdeptnohaving\tavg(sal) > 2500;")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"总结-单表查询结束"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结-单表查询结束"}},[s._v("#")]),s._v(" 总结（单表查询结束)")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("having")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("执行顺序：不能颠倒\t"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("，"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" 查询\t"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("，"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" 过滤\t"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("，"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" 分组\t"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("，"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("having")]),s._v(" 接着过滤\t"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("，"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" 查询\t"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("，"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" 排序输出\t从某张表中查询数据先经过"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v("条件筛选出有价值的数据对这些有价值的数据进行分组分组之后可以使用"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("having")]),s._v("继续筛选经过"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v("查询出来最后排序输出。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("blockquote",[t("p",[s._v("综合案例：")]),s._v(" "),t("p",[s._v("找出每个岗位的平均薪资，要求显示平均薪资大于1500的，出MANAGER之外，要求按照平均薪资降序排列。")])]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v("\tjob"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("avg")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" avgsalfrom\tempwhere\tjob "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<>")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'MANAGER'")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v("\tjbohaving\t"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("avg")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sal"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1500")]),s._v("order "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v("\tavgsal "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("desc")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"去除重复记录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#去除重复记录"}},[s._v("#")]),s._v(" 去除重复记录")]),s._v(" "),t("p",[s._v("把查询结果去除重复记录")]),s._v(" "),t("p",[t("strong",[s._v("注意：原表数据不会被修改，只是显示结果去重。去重需要一个关键字 distinct。")])]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("distinct")]),s._v(" job "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//select ename,distinct job from emp;//这样编写是错误的，distinct只出现在所有字段的前方。select distinct job,deptno from emp;//出现在job个deptno两个字段之前，联合两个字段去重。//统计工作岗位的数量select count(distinct job) from emp;")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"连接查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#连接查询"}},[s._v("#")]),s._v(" 连接查询")]),s._v(" "),t("h3",{attrs:{id:"概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[s._v("#")]),s._v(" 概述：")]),s._v(" "),t("blockquote",[t("p",[s._v("从emp表中取员工名字，从dept表中取部门名字。这种跨表查询，多张表联合起来查询数据，称为连接查询")]),s._v(" "),t("p",[s._v("从一张表中单独查询，称为单表查询。")])]),s._v(" "),t("h3",{attrs:{id:"连接查询的分类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#连接查询的分类"}},[s._v("#")]),s._v(" 连接查询的分类")]),s._v(" "),t("blockquote",[t("p",[s._v("根据语法的种类进行分类")]),s._v(" "),t("p",[s._v("​\tSQL92：1992年出现的语法。")]),s._v(" "),t("p",[s._v("​\tSQL99：1999年出现的语法。")]),s._v(" "),t("p",[s._v("根据表的连接方式分类")]),s._v(" "),t("p",[s._v("​\t内连接：")]),s._v(" "),t("p",[s._v("​\t\t等值连接")]),s._v(" "),t("p",[s._v("​\t\t非等值连接")]),s._v(" "),t("p",[s._v("​\t\t自连接")]),s._v(" "),t("p",[s._v("​\t外连接：")]),s._v(" "),t("p",[s._v("​\t\t左外连接 （左连接）")]),s._v(" "),t("p",[s._v("​\t\t右外连接 （右连接）")]),s._v(" "),t("p",[s._v("​\t全连接（不常用）")])]),s._v(" "),t("h3",{attrs:{id:"笛卡尔积现象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#笛卡尔积现象"}},[s._v("#")]),s._v(" 笛卡尔积现象")]),s._v(" "),t("p",[s._v("当两张表进行连接查询时，没有任何的条件限制，会发生什么现象。")]),s._v(" "),t("blockquote",[t("p",[t("strong",[s._v("连接查询的原理：拿出一张表的记录和另一张表的所有记录进行对比。")])])]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//案例：查询每个员工所在的部门名称select ename, deptno from ename,deptno;")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("blockquote",[t("p",[s._v("笛卡尔积现象：当两张表进行连接查询时，没有任何的条件限制，会发生的现象是"),t("strong",[s._v("最"),t("em",[s._v("终的查询结果的条数是两张表条数的乘积。")])])])]),s._v(" "),t("h3",{attrs:{id:"怎么避免笛卡尔积现象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#怎么避免笛卡尔积现象"}},[s._v("#")]),s._v(" 怎么避免笛卡尔积现象")]),s._v(" "),t("blockquote",[t("p",[s._v("连接时接入条件，满足这个条件的记录被筛选出来。")])]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v("\tename"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("dname "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" emp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("denptnowhere\temp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ename"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("deptno"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("dname"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//最终查询结果条数减少，但是执行次数不会减少。//给表起别名，提高查询效率。select e.ename,d.dname;from emp e,denptno d where\te.ename = d.dname;  //SQL92语法。")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("em",[t("strong",[s._v("减少表的连接次数，提高程序的执行效率")])])]),s._v(" "),t("h3",{attrs:{id:"内连接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#内连接"}},[s._v("#")]),s._v(" 内连接")]),s._v(" "),t("p",[t("strong",[s._v("特点：将能够匹配上这个查询条件的数据查询出来")])]),s._v(" "),t("p",[t("strong",[s._v("两张表中没有主次关系")])]),s._v(" "),t("h4",{attrs:{id:"内连接之等值连接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#内连接之等值连接"}},[s._v("#")]),s._v(" 内连接之等值连接")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//案例：查询每个员工所在部门的名称，显示员工和部门名//emp e,dept d表进行连接，条件是e.deptno = d.dpetnp;//SQL92语法select\te.ename,d.dnamefrom\temp e, deptno dwhere\te.deptno = d.deptno;\t//缺点：结构不清晰，表的连接条件和后期进一步筛选的条件，都放到了where的后面。//SQL99语法select\te.ename,d.dnamefrom\temp e, (inner) join\t\t\t//inner（内部的）可以省略。\tdept don\te.deptno = d.deptno;\t//条件是等值关系，所以为等值连接。\tselect \t...from\ta(inner) join\tbon\ta和b的连接条件。where\t筛选条件\t//优点：表连接的条件是独立的，连接之后，如果还需要进一步筛选，再往后继续添加where条件即可。")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h4",{attrs:{id:"内连接之非等值连接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#内连接之非等值连接"}},[s._v("#")]),s._v(" 内连接之非等值连接")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//案例：查询每个员工的薪资等级，要求显示员工名，薪资，员工等级select\te.ename,e.sal,s.salgradefrom\temp ejoin\t\t\t//inner（内部的）可以省略。\tsalgrade son \te.sal between s.local and s.hisal  //非等值连接，条件不是一个等量关系。")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h4",{attrs:{id:"内连接之自连接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#内连接之自连接"}},[s._v("#")]),s._v(" 内连接之自连接")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//案例：查询每个员工的上级领导，要求显示员工名和对应的领导名。//技巧：一张表看作两张表select\ta.ename as '员工名',b.ename as '领导名'from emp ajoin\temp bon\ta.mgr = b.empno;  //自连接的技巧，一张表看作两张表。")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"外连接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#外连接"}},[s._v("#")]),s._v(" 外连接")]),s._v(" "),t("blockquote",[t("p",[s._v("任何一个右连接都有左连接的写法")]),s._v(" "),t("p",[s._v("任何一个左连接都有右连接的写法")]),s._v(" "),t("p",[s._v("两种写法可以互换。")])]),s._v(" "),t("h4",{attrs:{id:"右外连接-右连接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#右外连接-右连接"}},[s._v("#")]),s._v(" 右外连接(右连接)")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v("\te"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ename"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("d"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("dnamefrom\temp e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("right")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("outer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//outer可以省略，带着可读性强。\tdept don\te.deptno = d.deptno;//right代表：表示将join关键字右边的这张表看成是主表，主要是为了将这张表的数据全部查询出来，捎带着关联查询左边的表。//在外连接中产生了主次关系")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h4",{attrs:{id:"左外连接-左连接"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#左外连接-左连接"}},[s._v("#")]),s._v(" 左外连接(左连接)")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v("\te"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ename"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("d"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("dnamefrom\temp e"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("left")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("outer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("join")]),s._v("    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//outer可以省略，带着可读性强。\tdept don\te.deptno = d.deptno;")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("blockquote",[t("p",[s._v("外连接的查询结果的结果条数一定是 >= 内连接的查询结果的结果条数")])]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//案例：查询每个员工的上级领导，要求显示所有的员工名字和领导名字。//外连接select\ta.ename as '员工名', b.ename as ‘领导名’from\temp aleft join\temp bon \ta.mgr = b.empno;")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"三张表或者四张表的连接方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三张表或者四张表的连接方式"}},[s._v("#")]),s._v(" 三张表或者四张表的连接方式")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//语法：select\t...from\tajoin\tbon\ta和b的连接条件join\tcon\ta和c的连接条件right join\tdon\ta和d的连接条件\t//一条SQL语句中，内连接和外连接可以混合出现。")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"子查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#子查询"}},[s._v("#")]),s._v(" 子查询")]),s._v(" "),t("h3",{attrs:{id:"概述-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概述-2"}},[s._v("#")]),s._v(" 概述：")]),s._v(" "),t("blockquote",[t("p",[s._v("select语句中嵌套select语句。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//可以出现在以下位置select\t..(select).from\t..(select).where\t..(select).")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])]),s._v(" "),t("h3",{attrs:{id:"where子句中的子查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#where子句中的子查询"}},[s._v("#")]),s._v(" where子句中的子查询")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//案例：找出比最低工资高的员工姓名和工资select\tename,salfrom\tempwhere\tsal > min(sal);//此方法不能实现，因为where子句中不能出现分组函数//实现思路：\t第一步;查询最低工资\tselect min(sal) from emp;\t第二步：\t找出 > 800的\t第三步：合并\tselect \t\tename,sal \tfrom \t\temp \twhere \t\tsal > (select min(sal) from emp);")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"from子句中的子查询"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#from子句中的子查询"}},[s._v("#")]),s._v(" from子句中的子查询")]),s._v(" "),t("p",[t("strong",[s._v("注意：from后面的子查询可以将子查询的结果当作一个临时表（技巧）")])]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//案例：找出每个岗位的平均工资的薪资等级第一步：找出每个岗位的平均工资（按照岗位分组求平均值）select job,avg(sal) from emp group by;第二步：将第一步查询的表当作一张真实的表t，将t和salgrade进行表连接，条件：t表abg(sal) between s.losal and s.hisal;select\tt.*,s.gradefrom\t(select job,avg(sal) as avgsal from emp group by job) tjoin\tsalgrade son\tt.avgsal between s.losal and s.hisal'")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"select后面的子查询-了解即可-不常用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#select后面的子查询-了解即可-不常用"}},[s._v("#")]),s._v(" select后面的子查询（了解即可，不常用）")]),s._v(" "),t("p",[t("strong",[s._v("注意：这样的子查询结果不能多于1条，不然出错。")])]),s._v(" "),t("h2",{attrs:{id:"union的用法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#union的用法"}},[s._v("#")]),s._v(" union的用法")]),s._v(" "),t("blockquote",[t("p",[t("em",[t("strong",[s._v("合并查询结果集")])])]),s._v(" "),t("p",[s._v("union的使用效率要高一些，对于表连接来说，每连接一次新表，则匹配的次数满足笛卡尔积，成倍翻。。。")]),s._v(" "),t("p",[s._v("但是union的效率可以减少匹配的次数。在减少匹配次数情况下，还可以完成两个结果集的拼接。")]),s._v(" "),t("p",[s._v("a连接b连接c")]),s._v(" "),t("p",[s._v("a 10条记录")]),s._v(" "),t("p",[s._v("b 10条记录")]),s._v(" "),t("p",[s._v("c 10条记录")]),s._v(" "),t("p",[s._v("匹配记录是：10 * 10 * 10 = 1000")]),s._v(" "),t("p",[s._v("a 连接 b 一个结果： 10 * 10 = 100;")]),s._v(" "),t("p",[s._v("a 连接 c 一个结果： 10 * 10 = 100;")]),s._v(" "),t("p",[s._v("使用union是 100 + 100 = 200次。（union把乘法变成了加法运算）")])]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//案例：查询工作岗位是MANAGER和SALESMAN的员工\tselect ename,job from emp where job = 'MANAGER' or job = 'SALESMAN';\t\tselect ename,job from emp where job in('MANAGER','SALESMAN');\tunion的使用：select ename,job from emp where job = 'MANAGER'unionselect ename,job from emp where job = 'SALESMAN';")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("blockquote",[t("p",[s._v("union的使用注意事项：")]),s._v(" "),t("p",[s._v("union在进行结果集合并的时候，要求两个结果集的列数相同。")]),s._v(" "),t("p",[s._v("要求列数的数据类型也先相同。")])]),s._v(" "),t("h2",{attrs:{id:"limit"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#limit"}},[s._v("#")]),s._v(" limit")]),s._v(" "),t("h3",{attrs:{id:"概述-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概述-3"}},[s._v("#")]),s._v(" 概述：")]),s._v(" "),t("p",[s._v("将查询结果的一部分取出，通常在分页查询中。分页的作用是为了提高用户的体验，因为一次查询出来所有的结果，用户体验差。可以翻页看。")]),s._v(" "),t("h3",{attrs:{id:"limit的用法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#limit的用法"}},[s._v("#")]),s._v(" limit的用法：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//案例：按照薪资降序，取出排名在前五名的员工？select \tename,salfrom\temporder by\tsal desclimit 5;\t//去前五//limit的语法：完整用法：limit startIndex,length\tstartIndex是起始下标，length是长度。缺省用法：limit 5;")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("em",[t("strong",[s._v("注意：limit是在order by之后执行的。")])])]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//案例：取出工资排名在[3-5]名的员工。select\tename,salfrom\temporder by\tsal desclimit\t2, 3;//2表示起始位置从下标2开始，就是第三条记录。//3表示长度。")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"通用分页"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#通用分页"}},[s._v("#")]),s._v(" 通用分页")]),s._v(" "),t("blockquote",[t("p",[s._v("每页显示3条记录")]),s._v(" "),t("p",[s._v("第一页：limit 0，3 [0 1 2]")]),s._v(" "),t("p",[s._v("第二页：limit 3，3 [3 4 5]")]),s._v(" "),t("p",[s._v("第三页：limt 6，3 [6 7 9]")]),s._v(" "),t("p",[s._v("第四页：limit 9，3 [9 10 11]")]),s._v(" "),t("p",[s._v("每页显示pageSize条记录")]),s._v(" "),t("p",[s._v("第pageNo页：limit  （pageNo - 1 * pageSize)，pageSize")])]),s._v(" "),t("h2",{attrs:{id:"关于dql语句的总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#关于dql语句的总结"}},[s._v("#")]),s._v(" 关于DQL语句的总结：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("having")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("limit")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"表的创建及数据类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#表的创建及数据类型"}},[s._v("#")]),s._v(" 表的创建及数据类型")]),s._v(" "),t("h3",{attrs:{id:"创建表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建表"}},[s._v("#")]),s._v(" 创建表")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[s._v("建表的语法格式：（建表属于DDL语句，DDL包括："),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("drop")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("alter")]),s._v("）\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" 表名"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("字段名"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" 数据类型，字段名"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" 数据类型，字段名"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" 数据类型"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("表名：建议以t_或者tbl_开始，可读性强。见名知义")]),s._v(" "),t("p",[s._v("字段名：见名知义")]),s._v(" "),t("p",[s._v("表名和字段名都属于标识符")]),s._v(" "),t("h3",{attrs:{id:"数据类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[s._v("#")]),s._v(" 数据类型")]),s._v(" "),t("p",[s._v("掌握一些常见的数据类型即可：")]),s._v(" "),t("blockquote",[t("p",[s._v("varchar（长度255）：")]),s._v(" "),t("p",[s._v("​\t可变长度的字符串，比较智能，根据实际的字符串动态\t分配空间。")]),s._v(" "),t("p",[s._v("​\t优点：节省空间")]),s._v(" "),t("p",[s._v("​\t缺点：需要动态分配空间，速度慢")]),s._v(" "),t("p",[s._v("char（长度255）：")]),s._v(" "),t("p",[s._v("​\t定长字符串，不管实际的字符串长度是多少，只分配固定长度的空间取存储数据。")]),s._v(" "),t("p",[s._v("​\t优点：不需要动态分配空间，速度快")]),s._v(" "),t("p",[s._v("​\t缺点：使用不恰当会导致空间的浪费。")]),s._v(" "),t("p",[s._v("​\t"),t("strong",[s._v("varchar和char的选择：性别字段：char。姓名字段：varchar。因为性别字段长度是固定的。")])]),s._v(" "),t("p",[s._v("int（长度11）：数字中的整型，等同于java的int")]),s._v(" "),t("p",[s._v("bigint：数字中的长整型，相当于java中的long")]),s._v(" "),t("p",[s._v("double：双精度浮点型数据")]),s._v(" "),t("p",[s._v("float：单精度浮点型数据")]),s._v(" "),t("p",[s._v("date：短日期类型")]),s._v(" "),t("p",[s._v("datetime：长日期类型")]),s._v(" "),t("p",[s._v("clob：字符大对象")]),s._v(" "),t("p",[s._v("​\t最多可以存储4G的文章。")]),s._v(" "),t("p",[s._v("​\t比如：存储一篇文章，存储一个说明。")]),s._v(" "),t("p",[s._v("​\t超过255个字符都用CLOB字符存储。")]),s._v(" "),t("p",[s._v("​\tCharacter Large OBject: CLOB")]),s._v(" "),t("p",[s._v("blob：")]),s._v(" "),t("p",[s._v("​\t二进制大对象")]),s._v(" "),t("p",[s._v("​\tBinary Large OBject：BLOB")]),s._v(" "),t("p",[s._v("​\t专门用来存储图片，声音，视频等流媒体数据。")]),s._v(" "),t("p",[s._v("​\t往blob类型的字段上插入数据的时候，需要使用IO流。")])]),s._v(" "),t("h3",{attrs:{id:"创建一个学生表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建一个学生表"}},[s._v("#")]),s._v(" 创建一个学生表")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" t_student"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\t\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("no")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("    \n    sex "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("    \n    name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("32")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("    \n    age "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("    \n    email "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("255")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h3",{attrs:{id:"快速创建表-了解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#快速创建表-了解"}},[s._v("#")]),s._v(" 快速创建表（了解）")]),s._v(" "),t("p",[t("code",[s._v("create table emp2 as select * from emp;")])]),s._v(" "),t("blockquote",[t("p",[s._v("原理：可以完成表的快速复制。")]),s._v(" "),t("p",[s._v("​\t\t把一个查询结果当成一张表新建。")]),s._v(" "),t("p",[s._v("​\t\t同时表中的数据也会存在。")])]),s._v(" "),t("h3",{attrs:{id:"删除表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除表"}},[s._v("#")]),s._v(" 删除表")]),s._v(" "),t("p",[s._v("如果这张表不存在会报错")]),s._v(" "),t("p",[s._v("drop table t_student;")]),s._v(" "),t("p",[s._v("如果这张表存在则删除。不会报错。")]),s._v(" "),t("p",[s._v("drop table t_student if exists;")]),s._v(" "),t("h3",{attrs:{id:"对表结构的增删改"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#对表结构的增删改"}},[s._v("#")]),s._v(" 对表结构的增删改")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[s._v("第一：在确定了表的结构之后，一般不会轻易的再次改动表，因为修改表的结构的代价比较大。修改表结构的时候，相对应的java代码也需要修改，成本是比较高的。\n第二：因为成本原因，这部分的责任由设计人员承担。不需要掌握。可以使用navicat工具修改。\n\n增加列\n "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("alter")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" test "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("add")]),s._v(" context_time "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("datetime")]),s._v("\n "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//向text表中加入context_time的列名，类型为datetime")]),s._v("\n \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h3",{attrs:{id:"插入数据-insert关键字。-dml"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#插入数据-insert关键字。-dml"}},[s._v("#")]),s._v(" 插入数据，insert关键字。（DML）")]),s._v(" "),t("h3",{attrs:{id:"插入值"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#插入值"}},[s._v("#")]),s._v(" 插入值")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//语法格式：\t")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" 表名（字段名"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("，字段名"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("，字段名"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("……）"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),s._v("（值"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("，值"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("，值"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("）"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//注意：字段名和值要一一对应，即数据类型要对应，数量要对应。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" t_student"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("no")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("sex"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("age"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("email"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'zhangsan'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'m'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'zhangsan@123.com'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" t_student"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("no")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//没有给其他字段指定值的时候，其他位置为NULL；")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//insert语句只要执行成功了，必须会多一条记录。")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//给某个字段指定默认值")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" t_student"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("no")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" sex "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" defult "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'f'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\tname "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("32")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" age "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" email "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("255")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//sex没有插入值时，默认值是‘f’。    ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//insert语句中的字段名可以省略吗，可以insert into t_student values(和字段的数据类型，数量匹配的值);")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//不写字段时，相当于全写。")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("h3",{attrs:{id:"insert一次插入多条记录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#insert一次插入多条记录"}},[s._v("#")]),s._v(" insert一次插入多条记录")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" t_user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("birth"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" create_time"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'zhangsan'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1980-01-01'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'lisi'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2000-01-01'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//语法格式：")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" t_user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("字段名"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("，字段名"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("h3",{attrs:{id:"将查询结果插入到一张表当中-了解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#将查询结果插入到一张表当中-了解"}},[s._v("#")]),s._v(" 将查询结果插入到一张表当中（了解）")]),s._v(" "),t("p",[t("code",[s._v("creat table dept_bak as select from dept;")])]),s._v(" "),t("p",[t("code",[s._v("insert into dept_bak select * from dept_bak;")])]),s._v(" "),t("p",[s._v("很少用这种方式。")]),s._v(" "),t("h3",{attrs:{id:"insert插入日期"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#insert插入日期"}},[s._v("#")]),s._v(" insert插入日期")]),s._v(" "),t("h4",{attrs:{id:"str-to-date函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#str-to-date函数"}},[s._v("#")]),s._v(" str_to_date函数:")]),s._v(" "),t("p",[t("strong",[s._v("将字符串varchar类型转换成date类型")])]),s._v(" "),t("blockquote",[t("p",[s._v("语法格式：")]),s._v(" "),t("p",[s._v("str_to_date('字符串日期'，‘日期格式’);")])]),s._v(" "),t("p",[s._v("date_format:将date类型转换成具有一定格式的varchar的字符串类型。")]),s._v(" "),t("p",[t("em",[t("strong",[s._v("注意：数据库中的一条命名规范，所有的标识符都是全小写，单词和单词之间使用下划线分隔开。")])])]),s._v(" "),t("p",[s._v("mysql的日期格式：")]),s._v(" "),t("blockquote",[t("p",[s._v("%Y 年")]),s._v(" "),t("p",[s._v("%m 月")]),s._v(" "),t("p",[s._v("%d 日")]),s._v(" "),t("p",[s._v("%h 时")]),s._v(" "),t("p",[s._v("%i 分")]),s._v(" "),t("p",[s._v("% 秒")])]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" t_user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("birth"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'zhangsan'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("str_to_date"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'01-10-1990'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%d-%m-%Y'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("str_to_date函数可以把字符串varchar转换成date类型日期数据，")]),s._v(" "),t("p",[s._v("通常使用在插入insert方面，因为插入的时候需要一个日期类型的数据。需要通过函数将字符串转换成date。")]),s._v(" "),t("p",[s._v("如果提供的日期字符串是这个格式，str_to_date函数就不需要了，会自动做类型转换。")]),s._v(" "),t("blockquote",[t("p",[s._v("%Y-%m-%d \t\t1990-10-01")])]),s._v(" "),t("h4",{attrs:{id:"date-format函数。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#date-format函数。"}},[s._v("#")]),s._v(" date_format函数。")]),s._v(" "),t("p",[t("strong",[s._v("将日期类型转换成特定格式的字符串")])]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" id name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("date_format"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("birth"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%m-%d'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" t_user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("date_fromat函数的使用语法格式：date_format"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("日期类型，‘日期格式’"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"date和datetime类型的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#date和datetime类型的区别"}},[s._v("#")]),s._v(" date和datetime类型的区别：")]),s._v(" "),t("p",[s._v("date是短日期，只包括年月日")]),s._v(" "),t("p",[s._v("datetime是长日期，包括年月日时分秒信息。")]),s._v(" "),t("p",[s._v("mysql短日期默认格式：%Y-%m-%d")]),s._v(" "),t("p",[s._v("mysql长日期默认格式：%Y-%m-%d %h : %i : %s;")]),s._v(" "),t("p",[t("strong",[s._v("获取系统当前时间的函数")])]),s._v(" "),t("p",[s._v("now()函数并且获取的时间带有时分秒。")]),s._v(" "),t("h2",{attrs:{id:"dml语句"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dml语句"}},[s._v("#")]),s._v(" DML语句")]),s._v(" "),t("h3",{attrs:{id:"修改update"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#修改update"}},[s._v("#")]),s._v(" 修改update")]),s._v(" "),t("p",[s._v("语法格式：")]),s._v(" "),t("p",[s._v("​\t"),t("code",[s._v("update 表名 set 字段名1=值1，字段名2=值2，字段名3=值3…where 条件;")])]),s._v(" "),t("p",[t("strong",[s._v("注意：没有条件限制会导致左右数据全部更新")])]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("update")]),s._v(" t_user "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'jack'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("birth "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2000-10-11'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//修改创建时间")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("update")]),s._v(" t_user "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'jack'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("birth "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2000-10-11'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("create_time "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("now")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" id "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//更新所有：")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("update")]),s._v(" t_user "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'abc'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h3",{attrs:{id:"删除delete语句"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除delete语句"}},[s._v("#")]),s._v(" 删除delete语句")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[s._v("语法格式：\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("delete")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" 表名 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" 条件\n注意：没有"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v("条件时会删除整张表的数据。\n\n清空所有\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("delete")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" t_user"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("delete")]),s._v("语句的删除原理：（逻辑删除）\n删除表中的当前内容不会删除表中的数据空间。不会释放物理空间。\n缺点：删除效率低\n优点：删除之后可以回滚，恢复。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("h3",{attrs:{id:"快速删除表中的数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#快速删除表中的数据"}},[s._v("#")]),s._v(" 快速删除表中的数据")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("truncate")]),s._v("语句：快速删除表中的数据。表格式还在\n缺点：不支持回滚，\n优点：快速删除表，删除表的物理空间。\n\n用法：\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("truncate")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" dept_bak"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   （这种操作方式属于DDL操作）。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h2",{attrs:{id:"约束"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#约束"}},[s._v("#")]),s._v(" 约束")]),s._v(" "),t("h3",{attrs:{id:"约束概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#约束概述"}},[s._v("#")]),s._v(" 约束概述")]),s._v(" "),t("p",[s._v("约束对应的单词：constraint")]),s._v(" "),t("p",[s._v("在创建表的时候，我们可以给表的字段加上一些约束，来保证这个表中数据的完整性，有效性")]),s._v(" "),t("p",[t("strong",[s._v("约束的作用是为了保证表中的数据有效。")])]),s._v(" "),t("h3",{attrs:{id:"约束包括那些"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#约束包括那些"}},[s._v("#")]),s._v(" 约束包括那些")]),s._v(" "),t("ol",[t("li",[s._v("非空约束   not null")]),s._v(" "),t("li",[s._v("唯一性约束 unique")]),s._v(" "),t("li",[s._v("主键约束  primary key (简称PK)")]),s._v(" "),t("li",[s._v("外键约束 foregin key （简称FK）")]),s._v(" "),t("li",[s._v("检查约束 check  （mysql不支持，oracle支持）")])]),s._v(" "),t("h3",{attrs:{id:"非空约束"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#非空约束"}},[s._v("#")]),s._v(" 非空约束")]),s._v(" "),t("p",[s._v("非空约束not null约束的字段不能为null")]),s._v(" "),t("p",[t("strong",[s._v("not null只有列级约束，没有表级约束。")])]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" t_vip"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n\tid "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("255")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("not")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//限定了name字段不能为空。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("h3",{attrs:{id:"sql脚本文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sql脚本文件"}},[s._v("#")]),s._v(" SQL脚本文件")]),s._v(" "),t("blockquote",[t("p",[s._v("XXXX.sql 被称为sql脚本文件，SQL脚本文件中编写了大量的sql语句，")]),s._v(" "),t("p",[s._v("当我们执行sql脚本文件的时候，该文件中的所有sql语句都会执行。")]),s._v(" "),t("p",[s._v("当需要批量执行SQL语句，可以使用SQL脚本文件")]),s._v(" "),t("p",[s._v("执行SQL脚本文件的方式")]),s._v(" "),t("p",[t("code",[s._v("source + '绝对路径';")])])]),s._v(" "),t("p",[t("em",[t("strong",[s._v("source命令直接执行sql脚本文件。")])])]),s._v(" "),t("h3",{attrs:{id:"唯一性约束-unique"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#唯一性约束-unique"}},[s._v("#")]),s._v(" 唯一性约束，unique")]),s._v(" "),t("p",[s._v("唯一性约束的字段不能重复，但是可以为null。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("drop")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("exists")]),s._v(" t_vip"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" t_vip"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n\tid "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("255")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unique")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//限定了name字段不能重复。")]),s._v("\n    email "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("255")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" t_vip"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("email"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'zhangsan'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'zhangsan@123.com'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" t_vip"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("idmname"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("email"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'lisi'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'lisi@123.com'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" t_vip"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("email"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'zhangsan'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'zhangsan@qq.com'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//报错：Duplicate entry ‘zhangsan’ for key ‘name’")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//虽然naem被unique约束，但是可以同时插入NULL")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" t_vip"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" t_vip"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br")])]),t("h3",{attrs:{id:"两个字段联合唯一"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#两个字段联合唯一"}},[s._v("#")]),s._v(" 两个字段联合唯一")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//需求：name和email两个字段联合起来据哦于唯一性")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("drop")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("exists")]),s._v(" t_vip"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" t_vip"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n\tid "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("255")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unique")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    email "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("255")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unique")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//这样编写代码不符合以上唯一性需求。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//这样表示：name具有唯一性，email也具有唯一性。各自唯一。")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//希望实现以下的效果：使用以上方式创建表，插入不了以下数据，因为‘zhangsan’重复了")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" t_vip"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("email"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'zhangsan'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'zhangsan@123.com'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" t_vip"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("email"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'zhangsan'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'zhangsan@qq.com'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//使用以下方式创建")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("drop")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("exists")]),s._v(" t_vip"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" t_vip"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n\tid "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("255")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    email "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("255")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unique")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("email"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//name和email两个字段联合起来唯一。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br")])]),t("p",[t("strong",[s._v("约束没有添加在列的后面，这种约束被称为表级约束。")])]),s._v(" "),t("blockquote",[t("p",[s._v("需要给多个字段联合起来添加某一个约束的时候，需要使用表级约束")])]),s._v(" "),t("p",[t("strong",[s._v("约束条件添加到列后面的，叫做列级约束。")])]),s._v(" "),t("h3",{attrs:{id:"unique和not-null可以联合吗"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#unique和not-null可以联合吗"}},[s._v("#")]),s._v(" unique和not null可以联合吗")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("drop")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("exists")]),s._v(" t_vip"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" t_vip"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n\tid "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("255")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("not")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unique")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//被 not null unique 同时约束的话，该字段会自动变成主键字段。（注意：oracle中不一样！）")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" t_vip"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'zhangsan'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" t_vip"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'zhangsan'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//错误：name'zhangsan'重复。")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" t_vip"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//错误：name不能为空。")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("h3",{attrs:{id:"主键约束-primary-key-简称pk"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#主键约束-primary-key-简称pk"}},[s._v("#")]),s._v(" 主键约束（primary key 简称PK *********）：")]),s._v(" "),t("h4",{attrs:{id:"主键约束的相关术语"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#主键约束的相关术语"}},[s._v("#")]),s._v(" 主键约束的相关术语")]),s._v(" "),t("p",[s._v("主键约束：就是一种约束")]),s._v(" "),t("p",[s._v("主键字段：该字段上添加了主键约束，这样的字段叫做：主键字段")]),s._v(" "),t("p",[s._v("主键值：主键字段中的每一个值都叫做：主键值。")]),s._v(" "),t("h4",{attrs:{id:"主键是什么-主键的作用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#主键是什么-主键的作用"}},[s._v("#")]),s._v(" 主键是什么，主键的作用")]),s._v(" "),t("p",[s._v("主键值是每一行记录的唯一标识。")]),s._v(" "),t("p",[s._v("主键值是每一行记录的身份证号。")]),s._v(" "),t("p",[t("strong",[s._v("任何一张表都应该有主键。没有主键，表无效。")])]),s._v(" "),t("p",[t("strong",[s._v("主键不能有default")])]),s._v(" "),t("blockquote",[t("p",[s._v("create table user(")]),s._v(" "),t("p",[s._v("​\tid int(20) not null primary key ,")]),s._v(" "),t("p",[s._v("name varchar(30) not null")]),s._v(" "),t("p",[s._v(")engine=innodb default charset =utf8;")])]),s._v(" "),t("p",[t("strong",[s._v("主键的特征：not null + unique（主键值不能是NULL，同时也不能重复！）")])]),s._v(" "),t("h4",{attrs:{id:"给一张表添加主键"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#给一张表添加主键"}},[s._v("#")]),s._v(" 给一张表添加主键：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("drop")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("exists")]),s._v(" t_vip"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" t_vip"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n\tid "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("not")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unique")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("255")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" t_vip"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'zhangsan'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" t_vip"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'lisi'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" t_vip"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'wangwu'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//错误：duplicate entry '2' for key 'PRIMARY'")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" t_vip"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'wangwu'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//错误：不能为NULL")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//使用表级约束")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("drop")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("exists")]),s._v(" t_vip"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" t_vip"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n\tid "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("255")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("primary")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("key")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\t\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//表级约束")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//一个字段做主键，叫做单一主键")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//表级约束主要是给多个字段联合起来添加约束。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("drop")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("exists")]),s._v(" t_vip"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" t_vip"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n\tid "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("255")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    email "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("255")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("primary")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("key")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\t\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//表级约束")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//两个字段联合起来做主键，叫做复合主键！")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//在实际开发中不建议使用复合主键。")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br")])]),t("h4",{attrs:{id:"主键数量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#主键数量"}},[s._v("#")]),s._v(" 主键数量")]),s._v(" "),t("p",[s._v("一个表中只能添加一个主键约束。")]),s._v(" "),t("h4",{attrs:{id:"主键值建议使用类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#主键值建议使用类型"}},[s._v("#")]),s._v(" 主键值建议使用类型")]),s._v(" "),t("p",[s._v("int")]),s._v(" "),t("p",[s._v("bigint")]),s._v(" "),t("p",[s._v("char")]),s._v(" "),t("p",[s._v("……")]),s._v(" "),t("p",[s._v("不建议使用：varchar来做主键，主键值一般都是数字，而且都是定长的。")]),s._v(" "),t("h4",{attrs:{id:"主键分类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#主键分类"}},[s._v("#")]),s._v(" 主键分类")]),s._v(" "),t("p",[s._v("除了单一主键和复合主键之外，还可以分为自然主键和业务主键")]),s._v(" "),t("p",[s._v("自然主键：主键值是一个自然数，和业务没有关系")]),s._v(" "),t("p",[s._v("业务主键：主键值和业务紧密联系，例如拿银行卡账号做主键值，这就是业务主键！")]),s._v(" "),t("p",[s._v("在实际开发中：自然主键使用比较多，因为逐渐只要做到不重复就行，不需要有意义。")]),s._v(" "),t("p",[s._v("业务主键不好，因为主键一旦和业务挂钩，那么当业务发生变动时，可能会影响到主键值，所以不建议业务逐渐。尽量使用自然主键。")]),s._v(" "),t("p",[s._v("在musql当中，有一种机制，可以帮我们自动维护主键值")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("drop")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("exists")]),s._v(" t_vip"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" t_vip"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n\tid "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("primary")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("key")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("auto_increment")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//auto_increment从一开始，以一自增.")]),s._v("\n    name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("255")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" t_vip"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'zhangsan'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" t_vip"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'zhangsan'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" t_vip"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'zhangsan'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" t_vip"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'zhangsan'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" t_vip"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'zhangsan'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" t_vip"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'zhangsan'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" t_vip"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'zhangsan'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" t_vip"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nid会自增，\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br")])]),t("h3",{attrs:{id:"外键约束-foreign-key-简称-fk"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#外键约束-foreign-key-简称-fk"}},[s._v("#")]),s._v(" 外键约束（foreign key 简称 FK *********）")]),s._v(" "),t("h4",{attrs:{id:"外键约束的相关术语"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#外键约束的相关术语"}},[s._v("#")]),s._v(" 外键约束的相关术语")]),s._v(" "),t("p",[s._v("外键约束：就是一种约束foreign key）")]),s._v(" "),t("p",[s._v("外键字段：该字段上添加了外键约束，这样的字段叫做：外键字段")]),s._v(" "),t("p",[s._v("外键值：外键字段中的每一个值都叫做：外键值。")]),s._v(" "),t("h4",{attrs:{id:"业务背景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#业务背景"}},[s._v("#")]),s._v(" 业务背景")]),s._v(" "),t("p",[s._v("设计一张数据库表")]),s._v(" "),t("p",[s._v("第二种方案：班级一张表，学上一张表。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[s._v("t_class班级表\ncalssno"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("PK"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\t\tclassname\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("------------------------------")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("\t\t\t\t甘肃省镇原县三岔镇高三"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("班\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("101")]),s._v("\t\t\t\t甘肃省镇原县三岔镇高三"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("班\n\nt_students\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("no")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("PK"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\t\tname\t\tcno"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("FK引用_class这张表中的classno"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-----------------------------")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\t\t\tjack\t\t"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\t\t\ttom\t\t\t"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\t\t\tlucy\t\t"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\t\t\tjim\t\t\t"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("101")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\t\t\tlisi\t\t"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("101")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("\t\t\tzhangsan\t"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("101")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("p",[s._v("当cno字段没有任何约束的时候，可能会导致数据无效，可能出现一个102，但是103班级不存在，所以为了保证cno字段中的值都是100和101，需要给cno字段添加外键约束")]),s._v(" "),t("p",[s._v("那么：cno字段就是外键字段。cno字段中的每一个值都是外简值。")]),s._v(" "),t("p",[t("strong",[s._v("注意：t_class 是父表。 t_students是子表。")])]),s._v(" "),t("p",[t("strong",[s._v("删除表的顺序：先删子，再删父")])]),s._v(" "),t("p",[t("strong",[s._v("创建表的顺序：先创建父，再创建子")])]),s._v(" "),t("p",[t("strong",[s._v("删除数据的顺序：先删子，再删父")])]),s._v(" "),t("p",[t("strong",[s._v("插入数据的顺序：先插入父，再插入子")])]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[s._v("创建这张表的"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("sql")]),s._v("文件\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" foreign_key_checks"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("drop")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("exists")]),s._v(" t_student"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("drop")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("exists")]),s._v(" t_class"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" foreign_key_checks"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" t_class"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n\tclassno "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("primary")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("key")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    classname "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("255")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" t_student"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n\t"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("no")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("primary")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("key")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("auto_increment")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("255")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    cno "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("constraint")]),s._v(" cforeign "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("key")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("cno"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("references")]),s._v(" t_class"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("classno"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" t_class"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("classno"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("classname"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'甘肃省镇原县三岔镇高三3班'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" t_class"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("classno"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("classname"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("101")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'甘肃省镇原县三岔镇高三6班'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" t_student"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("cno"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'jack'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" t_student"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("cno"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'tom'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" t_student"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("cno"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'lucy'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" t_student"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("cno"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'jim'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("101")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" t_student"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("cno"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'lisi'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("101")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("insert")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("into")]),s._v(" t_student"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("cno"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("values")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'zhangsan'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("101")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" t_student"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" t_class"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br")])]),t("p",[t("em",[t("strong",[s._v("创建数据库时要设置数据库的编码为utf-8编码。")])])]),s._v(" "),t("p",[s._v("外键值可以为NULL。")]),s._v(" "),t("p",[s._v("子表中的外键引用父表中的字段时，父表中的字段必须要主键吗？")]),s._v(" "),t("p",[s._v("不一定")]),s._v(" "),t("h2",{attrs:{id:"存储引擎-了解内容"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#存储引擎-了解内容"}},[s._v("#")]),s._v(" 存储引擎（了解内容）")]),s._v(" "),t("h3",{attrs:{id:"存储引擎的作用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#存储引擎的作用"}},[s._v("#")]),s._v(" 存储引擎的作用")]),s._v(" "),t("p",[s._v("存储引擎时mysql中特有的一个术语，其他数据库没有，（Oracle中有，但是不叫这个名字。）")]),s._v(" "),t("p",[s._v("实际上是一个表存储/组织数据的方式不同")]),s._v(" "),t("p",[s._v("不同的存储引擎，表存储数据的方式不同。")]),s._v(" "),t("h3",{attrs:{id:"给表指定存储引擎的方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#给表指定存储引擎的方式"}},[s._v("#")]),s._v(" 给表指定存储引擎的方式")]),s._v(" "),t("p",[s._v("可以在建表的时候给表指定存储引擎")]),s._v(" "),t("p",[s._v("在见建表的时候可以在最后小括号的“）”的后面使用")]),s._v(" "),t("p",[s._v("ENGINE来指定存储引擎")]),s._v(" "),t("p",[s._v("CHARSET来指定这张表的字符编码方式")]),s._v(" "),t("p",[s._v("结论：")]),s._v(" "),t("blockquote",[t("p",[s._v("mysql默认的存储引擎是：InnoDB")]),s._v(" "),t("p",[s._v("mysql默认的字符编码方式是：utf-8")])]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" t_product"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n\tid "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("primary")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("key")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("varchar")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("255")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("engine")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("InnoDB")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("charset")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("utf8"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("h3",{attrs:{id:"mysql支持的存储引擎"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mysql支持的存储引擎"}},[s._v("#")]),s._v(" mysql支持的存储引擎")]),s._v(" "),t("p",[t("code",[s._v("show engines \\G;")])]),s._v(" "),t("p",[s._v("一共支持9大存储引擎。版本不同支持情况不同。")]),s._v(" "),t("h3",{attrs:{id:"mysql常用的存储引擎"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mysql常用的存储引擎"}},[s._v("#")]),s._v(" mysql常用的存储引擎")]),s._v(" "),t("h4",{attrs:{id:"myisam存储引擎"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#myisam存储引擎"}},[s._v("#")]),s._v(" MyISAM存储引擎")]),s._v(" "),t("blockquote",[t("p",[s._v("它管理的表具有以下特征")]),s._v(" "),t("p",[s._v("​\t使用以下三个文件表示每个表")]),s._v(" "),t("p",[s._v("​\t\t格式文件 - 存储表结构的定义（mytable.frm）")]),s._v(" "),t("p",[s._v("​\t\t数据文件 - 存储表行的内容（nytable.MYD）")]),s._v(" "),t("p",[s._v("​\t\t索引文件 - 存储表上的索引（mytable.MYI）")]),s._v(" "),t("p",[s._v("​\t优势：可被转换为压缩，只读表来节省空间。")])]),s._v(" "),t("h4",{attrs:{id:"innodb存储引擎"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#innodb存储引擎"}},[s._v("#")]),s._v(" InnoDB存储引擎")]),s._v(" "),t("blockquote",[t("p",[s._v("这是mysql默认的存储引擎，同时也是重量级的存储引擎。")]),s._v(" "),t("p",[t("strong",[s._v("它支持事务，支持数据库崩溃之后的自动恢复机制")])]),s._v(" "),t("p",[t("strong",[s._v("最重要的特点是：非常安全。")])]),s._v(" "),t("p",[s._v("效率不是很高，不能压缩，不能节省存储空间。")]),s._v(" "),t("p",[t("strong",[s._v("它管理的表具有以下特征：")])]),s._v(" "),t("p",[s._v("1:支持事务(要么全成功、要么全失败);")]),s._v(" "),t("p",[s._v("2:行级锁定(更新数据时一般指锁定当前行)：通过索引实现、全表扫描忍让时表锁、注意间隙所的影响;\n3:读写阻塞与事务的隔离级别相关；\n4:具有非常高的缓存特性(既能缓存索引、也能缓存数据)；\n5:这个表和主键以组(Cluster)的方式存储、组成一颗平衡树；\n6:所有的辅助索引(secondary indexes)都会保存主键信息；\n7:支持分区、表空间（逻辑名称）tablespace类似与oracle 数据库；\n8:支持外键约束、不支持全文检索(5.5.5之前的MyISAM支持全文检索、5.5.5之后就不在支持);\n9:相对MyISAM而言、对硬件的要求比较高")])]),s._v(" "),t("h4",{attrs:{id:"memory存储引擎"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#memory存储引擎"}},[s._v("#")]),s._v(" MEMORY存储引擎")]),s._v(" "),t("blockquote",[t("p",[s._v("使用MEMORY存储引擎存储的表，其数据存储在内存中，且行的长度固定。")]),s._v(" "),t("p",[s._v("查询效率最高，不需要和硬盘交互。")]),s._v(" "),t("p",[s._v("但是不安全。关机之后数据消失，因为数据和索引都是存储在内存当中。")])]),s._v(" "),t("h2",{attrs:{id:"事务-理解-掌握"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#事务-理解-掌握"}},[s._v("#")]),s._v(" 事务（理解，掌握*****）")]),s._v(" "),t("h3",{attrs:{id:"概述-4"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概述-4"}},[s._v("#")]),s._v(" 概述：")]),s._v(" "),t("p",[s._v("一个事务就是一个完整的业务逻辑。")]),s._v(" "),t("p",[s._v("完整的业务逻辑")]),s._v(" "),t("p",[s._v("​\t假设转账：A转账1000给B")]),s._v(" "),t("p",[s._v("​\tA账户减去1000；")]),s._v(" "),t("p",[s._v("​\tB账户加上1000；")]),s._v(" "),t("p",[s._v("​\t以上的操作就是一个最小的工作单元，要么同时成功，要么同时失败，不可再分。同时成功同时失败才能保证钱是安全的。")]),s._v(" "),t("h3",{attrs:{id:"只有dml语句才会有事务这个说法-其他语句没有"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#只有dml语句才会有事务这个说法-其他语句没有"}},[s._v("#")]),s._v(" 只有DML语句才会有事务这个说法，其他语句没有！")]),s._v(" "),t("p",[s._v("insert")]),s._v(" "),t("p",[s._v("update")]),s._v(" "),t("p",[s._v("delete")]),s._v(" "),t("p",[s._v("只有以上三个语句和事务有关，其他都没有关系、")]),s._v(" "),t("p",[s._v("因为只有以上的三个语句是数据库表中数据进行增删改查的。")]),s._v(" "),t("p",[s._v("只要你的操作涉及到了数据的增删改查，就一定要考虑，数据安全问题。数据安全第一位。")]),s._v(" "),t("h3",{attrs:{id:"只要一条语句就能完成-还有必要存在事务机制吗"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#只要一条语句就能完成-还有必要存在事务机制吗"}},[s._v("#")]),s._v(" 只要一条语句就能完成，还有必要存在事务机制吗？")]),s._v(" "),t("p",[s._v("因为所有的业务不能一条语句完成所以才需要事务的存在。")]),s._v(" "),t("p",[s._v("事务的本质就是要多条DML语句同时成功或者同时失败。")]),s._v(" "),t("h3",{attrs:{id:"事务的实现方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#事务的实现方式"}},[s._v("#")]),s._v(" 事务的实现方式")]),s._v(" "),t("p",[s._v("InnoDB存储引擎：提供一组用来记录事务性活动的日志文件")]),s._v(" "),t("p",[s._v("在事务的执行过程中，每一条DML语句的操作都会记录到‘事务性活动的日志文件’中。在事务的执行过程中，我们可以提交事务，也可以回滚事务")]),s._v(" "),t("p",[s._v("提交事务：")]),s._v(" "),t("p",[s._v("​\t清空事务性活动的日志文件，将数据全部彻底持久化到数据库表中。")]),s._v(" "),t("p",[s._v("​\t提交事务之际，事务的结束，并且是一种全部成功的结束。")]),s._v(" "),t("p",[s._v("回滚事务：")]),s._v(" "),t("p",[s._v("​\t将之前所有的DML操作全部撤销，并且清空事务性活动的日志文件。")]),s._v(" "),t("p",[s._v("​\t回滚事务标志着，事物的结束，并且是一种全部失败的结束。")]),s._v(" "),t("h3",{attrs:{id:"提交事务和回滚事务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#提交事务和回滚事务"}},[s._v("#")]),s._v(" 提交事务和回滚事务")]),s._v(" "),t("p",[s._v("transaction：事务。")]),s._v(" "),t("blockquote",[t("p",[s._v("提交事务：commit; 语句")]),s._v(" "),t("p",[s._v("回滚事务：rollback; 语句 （永远只能回滚到最近的一个提交点）")])]),s._v(" "),t("p",[s._v("mysql默认的事务提交机制：")]),s._v(" "),t("p",[s._v("​\tmysql默认情况下是支持自动提交事务的。")]),s._v(" "),t("p",[s._v("​\t\t这种的自动提交机制不符合开发习惯，日常使用中我们需要关闭这个功能。")]),s._v(" "),t("p",[s._v("​\t没执行一条DML语句，则提交一次。")]),s._v(" "),t("p",[s._v("关闭mysql的自动提交机制")]),s._v(" "),t("p",[s._v("​\t先执行这个命令："),t("code",[s._v("start transaction(开启事务);")])]),s._v(" "),t("h3",{attrs:{id:"事务特性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#事务特性"}},[s._v("#")]),s._v(" 事务特性")]),s._v(" "),t("p",[s._v("一件事就是一个事务。")]),s._v(" "),t("p",[s._v("A：原子性")]),s._v(" "),t("p",[s._v("​\t说明事务是最小的工作单元。不可再分")]),s._v(" "),t("p",[s._v("C：一致性")]),s._v(" "),t("p",[s._v("​\t所有事务要求，在同一个事务中，所有的操作必须同时成功或者同时失败。以保证数据的一致性")]),s._v(" "),t("p",[s._v("I：隔离性")]),s._v(" "),t("p",[s._v("​\t事务之间具有一定的隔离。")]),s._v(" "),t("p",[s._v("D：持久性")]),s._v(" "),t("p",[s._v("​\t事务最终结束的保障。事务提交，就相当于将没有保存到硬盘上的数据保存到硬盘上。")]),s._v(" "),t("h3",{attrs:{id:"事务的4个隔离级别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#事务的4个隔离级别"}},[s._v("#")]),s._v(" 事务的4个隔离级别：")]),s._v(" "),t("blockquote",[t("p",[s._v("读未提交：read uncommitted （最低的隔离级别）")]),s._v(" "),t("p",[s._v("​\t事务A可以读取到事务B未提交的数据。")]),s._v(" "),t("p",[s._v("​\t这种隔离级别存在的问题是：")]),s._v(" "),t("p",[s._v("​\t\t脏读现象！（Dirty Read）")]),s._v(" "),t("p",[s._v("​\t\t读到了脏数据。")]),s._v(" "),t("p",[s._v("​\t这种隔离级别是理念上的，大多数的数据库都是二档起步。")]),s._v(" "),t("p",[s._v("读已提交：read commited")]),s._v(" "),t("p",[s._v("​\t事务A之能读取到事务B提交之后的数据")]),s._v(" "),t("p",[s._v("​\t这种隔离级别解决了脏读现象。")]),s._v(" "),t("p",[s._v("​\t这种隔离级别存在的问题是：")]),s._v(" "),t("p",[s._v("​\t\t不可重复读取数据。")]),s._v(" "),t("p",[s._v("​\t\t"),t("strong",[s._v("在事务开启的时候，第一次读到的数据是3条，第二次是4条。3不等于4.称为不可重复读取。")])]),s._v(" "),t("p",[s._v("​\t这种隔离级别是比较真实的数据，每一次读到的数据都是绝对真实。")]),s._v(" "),t("p",[s._v("​\toracle数据库的默认级别是read commited。")]),s._v(" "),t("p",[s._v("可重复读：repeatable")]),s._v(" "),t("p",[s._v("​\t事务A开启之后，不管是多久，每一次在事务A中读取到的数据都是一致的。即使事务B将数据修改了，已提交了，事务A读取到的数据还是没有改变。")]),s._v(" "),t("p",[s._v("​\t这种隔离级别解决了不可重复读取的问题。")]),s._v(" "),t("p",[s._v("​\t这种隔离级别存在的问题是：")]),s._v(" "),t("p",[s._v("​\t\t可能会出幻影读")]),s._v(" "),t("p",[s._v("​\t\t每一次读取到的数据都是幻象，不够真实")]),s._v(" "),t("p",[s._v("​\tmysql中默认的事务隔离级别是这个！")]),s._v(" "),t("p",[s._v("序列化/串行化：serializable（ 最高的隔离级别）")]),s._v(" "),t("p",[s._v("​\t这是最高的隔离级别，效率最低，解决了所有问题。")])]),s._v(" "),t("h3",{attrs:{id:"演示隔离级别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#演示隔离级别"}},[s._v("#")]),s._v(" 演示隔离级别")]),s._v(" "),t("p",[s._v("查看隔离级别：select @@tx_isloation;")]),s._v(" "),t("p",[s._v("修改事务的隔离级别：set global transaction isolation read uncommitted;")]),s._v(" "),t("h2",{attrs:{id:"索引-index"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#索引-index"}},[s._v("#")]),s._v(" 索引（index）")]),s._v(" "),t("h3",{attrs:{id:"概述-5"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概述-5"}},[s._v("#")]),s._v(" 概述：")]),s._v(" "),t("p",[s._v("索引实在数据库表的字段上添加的，是为了提高查询效率存在的一种机制。")]),s._v(" "),t("p",[s._v("一张表的一个字段可以添加一个索引，多个字段联合起来也可以添加索引。")]),s._v(" "),t("p",[s._v("索引相当于一本书的目录，是为了缩小扫描范围而存在的一种机制。")]),s._v(" "),t("p",[s._v("MySQL在查询方面主要就是两种方式：")]),s._v(" "),t("p",[s._v("​\t第一种：全表扫描")]),s._v(" "),t("p",[s._v("​\t第二种：根据索引检索")]),s._v(" "),t("p",[t("strong",[s._v("注意：")])]),s._v(" "),t("blockquote",[t("p",[s._v("在实际中，汉语字典前面的索引也是需要排序的，并且这个索引的排序和TreeSet数据结构相同，TreeSet（TreeMap）底层是一个自平衡的二叉树！在mysql当中索引是一个B-Tree数据结构")]),s._v(" "),t("p",[s._v("遵循左小右大原则存放，采用中序遍历方式遍历取数据。")])]),s._v(" "),t("h3",{attrs:{id:"索引的实现原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#索引的实现原理"}},[s._v("#")]),s._v(" 索引的实现原理")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[s._v("t_user\nid"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("PK"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\t\t\t\tname\t\t每一行记录在硬盘上都有物理存储编号。\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("--------------------------------------------------------------")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("\t\t\t\t\tzhangsan\t\t"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x1111")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("120")]),s._v("\t\t\t\t\tlisi\t\t\t"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x2222")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("99")]),s._v("\t\t\t\t\twnagwu\t\t\t"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x3333")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("88")]),s._v("\t\t\t\t\tzhangliu\t\t"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x4444")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("101")]),s._v("\t\t\t\t\tjack\t\t\t"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x5555")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("78")]),s._v("\t\t\t\t\tlucy\t\t\t"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x6666")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("130")]),s._v("\t\t\t\t\ttom\t\t\t\tox7777\n\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("在任何数据库当中主键上都会自动添加索引对象，id字段上自动有索引，因为id是PK，另外在mysql中，一个字段如果有"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("unique")]),s._v("约束的话，id字段上也会自动创建索引对象。\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("，在任何数据库中，任何一张表的任何一条记录在硬盘存储上都有一个硬盘的物理存储编号。\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("，在mysql中，索引是一个单独的对象，不同的存储引擎以不同的形式存在。在MyISAM存储引擎中，索引存储在一个"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("MYT文件中，在"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("InnoDB")]),s._v("存储引擎中索引存储在一个逻辑名称叫做"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("tablespace")]),s._v("当中，在MEMORY存储引擎中索引被存在内存中，不管索引存储在哪里，索引在mysql中都是以一个树的形式存在。（自平衡二叉树：B"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("Tree）\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("p",[t("img",{attrs:{src:"C:/Users/Administrator/Desktop/index.PNG",alt:"index"}})]),s._v(" "),t("h3",{attrs:{id:"什么条件下-会考虑给字段上添加索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么条件下-会考虑给字段上添加索引"}},[s._v("#")]),s._v(" 什么条件下，会考虑给字段上添加索引？")]),s._v(" "),t("p",[s._v("条件1：数据量庞大。（庞大的程度需要测试，硬件环境不同）")]),s._v(" "),t("p",[s._v("条件2：该字段经常出现在where的后面，以条件的形式存在，也就是说这个字段总是被扫描")]),s._v(" "),t("p",[s._v("条件3：该字段很少的DML操作。（因为DML之后吗，索引需要重新排序）")]),s._v(" "),t("p",[s._v("建议不要随便添加索引，因为索引也是需要维护的，太多的话反而会降低系统的性能。建议通过主键查询，建议通过unique约束的字段进行查询，效率是比较高的。")]),s._v(" "),t("h3",{attrs:{id:"索引的创建和删除"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#索引的创建和删除"}},[s._v("#")]),s._v(" 索引的创建和删除")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//创建索引")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),s._v(" emp_name_index "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" emp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ename"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  \n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//给emp表中的ename字段添加索引，起名：emp_ename_index")]),s._v("\n  \n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//删除索引")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("drop")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("index")]),s._v(" emp_ename_index "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("on")]),s._v(" emp"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//将emp表上的emp_ename_index索引对象删除")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("h3",{attrs:{id:"查看一个sql语句是否使用了索引进行检索。"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查看一个sql语句是否使用了索引进行检索。"}},[s._v("#")]),s._v(" 查看一个sql语句是否使用了索引进行检索。")]),s._v(" "),t("p",[s._v("explain select * from emp where ename = 'KING';")]),s._v(" "),t("p",[s._v("explain: 解释。")]),s._v(" "),t("h3",{attrs:{id:"索引失效"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#索引失效"}},[s._v("#")]),s._v(" 索引失效")]),s._v(" "),t("h4",{attrs:{id:"失效的第一种情况"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#失效的第一种情况"}},[s._v("#")]),s._v(" 失效的第一种情况")]),s._v(" "),t("p",[s._v("select *from emp where ename like '%T';")]),s._v(" "),t("p",[s._v("ename上即使添加了索引，也不会走索引。")]),s._v(" "),t("p",[s._v('​\t因为模糊匹配当中以“‘%"开头了')]),s._v(" "),t("p",[s._v("​\t实际开发中，尽量避免以%开头。")]),s._v(" "),t("p",[s._v("​\t这是一种优化的手段/策略")]),s._v(" "),t("h4",{attrs:{id:"失效的第二种情况"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#失效的第二种情况"}},[s._v("#")]),s._v(" 失效的第二种情况")]),s._v(" "),t("p",[s._v("使用or的时候会失效，如果使用or那么要求or两边的条件字段都要有索引，才会有索引，如果其中一边有一个字段没有索引，那么另一个字段上的索引也会实现，所以这就是为什么不建议使用or的原因。")]),s._v(" "),t("p",[s._v("可以使用union！")]),s._v(" "),t("h4",{attrs:{id:"失效的第三种情况"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#失效的第三种情况"}},[s._v("#")]),s._v(" 失效的第三种情况")]),s._v(" "),t("p",[s._v("使用复合索引的时候，没有使用左侧的列查找，索引失效。")]),s._v(" "),t("p",[s._v("复合索引：")]),s._v(" "),t("p",[s._v("​\t两个或者更多的字段联合起来添加一个索引。")]),s._v(" "),t("h4",{attrs:{id:"失效的第四种情况"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#失效的第四种情况"}},[s._v("#")]),s._v(" 失效的第四种情况")]),s._v(" "),t("p",[s._v("在where当中索引列参加了运算，索引失效。")]),s._v(" "),t("h4",{attrs:{id:"失效的第五种情况"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#失效的第五种情况"}},[s._v("#")]),s._v(" 失效的第五种情况")]),s._v(" "),t("p",[s._v("在where当中索引列使用了函数")]),s._v(" "),t("h3",{attrs:{id:"索引的分类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#索引的分类"}},[s._v("#")]),s._v(" 索引的分类")]),s._v(" "),t("p",[s._v("索引是各种数据库进行优化的重要手段，优化的时候优先考虑的是索引。")]),s._v(" "),t("blockquote",[t("p",[s._v("单一索引：一个字段上添加索引")]),s._v(" "),t("p",[s._v("复合索引：两个字段或者更多的字段上添加索引。")]),s._v(" "),t("p",[s._v("主键索引：主键上添加索引")]),s._v(" "),t("p",[s._v("唯一性索引：使用unique约束的字段上添加索引")]),s._v(" "),t("p",[t("strong",[s._v("注意：在唯一性比较弱的字段上添加索引用处不大")])])]),s._v(" "),t("h2",{attrs:{id:"视图-view"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#视图-view"}},[s._v("#")]),s._v(" 视图（view）")]),s._v(" "),t("h3",{attrs:{id:"概述-6"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概述-6"}},[s._v("#")]),s._v(" 概述：")]),s._v(" "),t("p",[s._v("站在不同的角度去看待同一份数据")]),s._v(" "),t("h3",{attrs:{id:"怎么创建视图对象-怎么删除视图对象"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#怎么创建视图对象-怎么删除视图对象"}},[s._v("#")]),s._v(" 怎么创建视图对象，怎么删除视图对象")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//创建视图对象")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("create")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("view")]),s._v(" dept2_view "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" dept2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//将查询结果作为视图")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//删除")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("drop")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("view")]),s._v(" dept2_view"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[t("strong",[s._v("注意：只有DQL语句才能创建以view的形式创建。")])]),s._v(" "),t("p",[t("code",[s._v("create view view_name as 这里的语句必须是DQL语句;")])]),s._v(" "),t("h3",{attrs:{id:"视图的作用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#视图的作用"}},[s._v("#")]),s._v(" 视图的作用")]),s._v(" "),t("p",[s._v("可以面向视图对象进行增删改查，对"),t("strong",[s._v("视图的增删改查，导致原表被修改。")])]),s._v(" "),t("h4",{attrs:{id:"视图对象在实际开发中的作用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#视图对象在实际开发中的作用"}},[s._v("#")]),s._v(" 视图对象在实际开发中的作用")]),s._v(" "),t("p",[s._v("假设有一条非常复杂的sql语句，而这条sql语句需要在不同的位置上反复使用，每一次都压重新编写，很长，很麻烦。怎么办？")]),s._v(" "),t("p",[s._v("​\t可以把这条复杂的sql语句以视图对象的形式创建")]),s._v(" "),t("p",[s._v("​\t在需要编写这条sql语句的位置直接使用视图对象，可以大大简化开发。")]),s._v(" "),t("p",[s._v("​\t并且利于后期的维护，因为修改的时候也只需要修改一个位置就行，只需要修改视图所映射的sql语句。")]),s._v(" "),t("p",[t("strong",[s._v("视图对象也是一个文件")]),s._v("，在数据库中是以文件形式存储在硬盘上的的。")]),s._v(" "),t("h3",{attrs:{id:"增删改查-又叫做crud"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#增删改查-又叫做crud"}},[s._v("#")]),s._v(" 增删改查：又叫做CRUD")]),s._v(" "),t("p",[s._v("CRUD是程序员之间沟通的术语，一般我们很少说增删改查")]),s._v(" "),t("p",[s._v("一般都说CRUD")]),s._v(" "),t("blockquote",[t("p",[s._v("C: Create (增)")]),s._v(" "),t("p",[s._v("R: Retrive （查：检索）")]),s._v(" "),t("p",[s._v("U: Update （改）")]),s._v(" "),t("p",[s._v("D: Delete （删）")])]),s._v(" "),t("h2",{attrs:{id:"dba-databasesadministrator-的命令-不经常使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dba-databasesadministrator-的命令-不经常使用"}},[s._v("#")]),s._v(" DBA（DataBasesAdministrator）的命令（不经常使用）")]),s._v(" "),t("h3",{attrs:{id:"数据导出"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据导出"}},[s._v("#")]),s._v(" 数据导出：")]),s._v(" "),t("p",[t("strong",[s._v("注意：在windows的命令行窗口中")])]),s._v(" "),t("p",[s._v("​\t导出SQL文件")]),s._v(" "),t("p",[s._v("​\t"),t("code",[s._v("nysqldump bjpowernode>D:\\bjpowernode.sql -uroot -p123456;")])]),s._v(" "),t("p",[s._v("​\t导出指定的表")]),s._v(" "),t("p",[s._v("​\t"),t("code",[s._v("mysqldump bjpowernode emp>D:\\bjpowernode.sql -uroot -p123456;")])]),s._v(" "),t("h3",{attrs:{id:"数据导入"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据导入"}},[s._v("#")]),s._v(" 数据导入")]),s._v(" "),t("p",[s._v("​\t"),t("strong",[s._v("注意：需要先登录到mysql数据库服务器上")])]),s._v(" "),t("p",[s._v("​\t然后创建数据库：create database bipowernode;")]),s._v(" "),t("p",[s._v("​\t使用数据库：use bjpowernode;")]),s._v(" "),t("p",[s._v("​\t然后初始化数据库：surce D:\\bipowernode.sql;")]),s._v(" "),t("h2",{attrs:{id:"数据库设计三范式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据库设计三范式"}},[s._v("#")]),s._v(" 数据库设计三范式")]),s._v(" "),t("h3",{attrs:{id:"概述-7"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概述-7"}},[s._v("#")]),s._v(" 概述：")]),s._v(" "),t("p",[s._v("数据库的设计依据，教你怎么设计数据库表")]),s._v(" "),t("h3",{attrs:{id:"数据库设计范式共有"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据库设计范式共有"}},[s._v("#")]),s._v(" 数据库设计范式共有？")]),s._v(" "),t("p",[s._v("​\t3个")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("要求任何一张表必须有主键，每一个字段原子性不可再分")])]),s._v(" "),t("li",[t("p",[s._v("建立在第一范式的基础上，要求所有非主键字段完全依赖主键，不要产生部分依赖。")])]),s._v(" "),t("li",[t("p",[s._v("建立在第二范式的基础上，要求所有非主键字段直接依赖主键。不要产生传递依赖。")]),s._v(" "),t("p",[t("em",[t("strong",[s._v("声明：三范式是面试官经常问的，所以一定要熟记在心！")])])]),s._v(" "),t("p",[s._v("设计数据库表的时候，按照以上的范式进行，可以避免表中数据的冗余，空间的浪费。")])])]),s._v(" "),t("h3",{attrs:{id:"第一范式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第一范式"}},[s._v("#")]),s._v(" 第一范式")]),s._v(" "),t("p",[s._v("最核心，最重要的范式，所有表的设计都需要满足。")]),s._v(" "),t("p",[s._v("必须有主键，每一个字段原子性不可再分")]),s._v(" "),t("h3",{attrs:{id:"第二范式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第二范式"}},[s._v("#")]),s._v(" 第二范式")]),s._v(" "),t("p",[s._v("建立在第一范式的基础上，要求所有非主键字段完全依赖主键，不要产生部分依赖。")]),s._v(" "),t("p",[t("em",[t("strong",[s._v("多对多的设计方式：多对多，三张表，关系表两个外键！")])])]),s._v(" "),t("h3",{attrs:{id:"第三范式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第三范式"}},[s._v("#")]),s._v(" 第三范式")]),s._v(" "),t("p",[s._v("建立在第二范式的基础上，要求所有非主键字段直接依赖主键。不要产生传递依赖。")]),s._v(" "),t("p",[t("em",[t("strong",[s._v("一对多，两张表，多的表加外键！")])])]),s._v(" "),t("h2",{attrs:{id:"总结表的设计"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#总结表的设计"}},[s._v("#")]),s._v(" 总结表的设计")]),s._v(" "),t("h3",{attrs:{id:"一对多"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一对多"}},[s._v("#")]),s._v(" 一对多")]),s._v(" "),t("p",[s._v("​\t一对多，两张表，多的表加外键！")]),s._v(" "),t("h3",{attrs:{id:"多对多"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多对多"}},[s._v("#")]),s._v(" 多对多")]),s._v(" "),t("p",[s._v("​\t多对多，三张表，关系表两个外键！")]),s._v(" "),t("h3",{attrs:{id:"一对一"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一对一"}},[s._v("#")]),s._v(" 一对一")]),s._v(" "),t("p",[s._v("​\t表中的字段太多，太庞大的时候需要拆分成两张表。")]),s._v(" "),t("p",[s._v("​\t"),t("em",[t("strong",[s._v("一对一，外键唯一！")])])]),s._v(" "),t("h2",{attrs:{id:"设计总结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#设计总结"}},[s._v("#")]),s._v(" 设计总结")]),s._v(" "),t("p",[t("strong",[s._v("数据库是设计三范式是理论上的，最终的目的是为了客户需求，有时候会用冗余换取速度。因为在sql中，多张表的连接会降低效率。（笛卡尔积现象）同时会降低sql语句的编写难度！")])])])}),[],!1,null,null,null);t.default=e.exports}}]);